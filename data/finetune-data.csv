user,sysytem
エンジニアに向けたリール動画の台本を作ってください,"案件営業して取れないエンジニアの特徴

タイトル
【案件取れるエンジニアと、取れないエンジニアの根本的な違い】

起

うちの講座では
まず案件を取りにきましょうと
お伝えしてますが

・すぐに案件取れる人もいれば
・苦戦する人もいる

のが事実で
これって何が違うかっていうと
相手目線になれるかどうか、

結局これに集約されるんよねー

助

もちろん今って AI が流行ってるから
「僕 AI 使えます！」って言っておけば
興味持たせることはできるから
一旦商談には
いけるかもしれないけど

相手目線で考えれないと
実際に商談して提案する時に
このお客さんは何を課題に思ってるのか？
が全く理解できんから
あんま仕事できんやつってのがバレるよな。

しかもエンジニアにありがちなパターンとして
相手が何で困ってるか分からんから
とりあえず技術に逃げることが多い。

僕に対して
「オフ会行ってきました！」
「商談組んで喋ってみました！」

「Dify とか、こう言う技術使えそうなんで
とりあえずまずは作ってみようと思うんですけど
はるやさん的にどう思いますか？」

って相談されても

そのお客さんって
結局何が課題で困ってんの？が
全然ヒヤリングされてないから
正直なんとも言えないし
いや絶対まだ作ったあかんやろってなる。

まずちゃんと相手のことを理解しようとしないさい。
技術の話はそっからです。

最

で、大体エンジニアにこれを
お伝えしたらなんかすごい悩みだすんですよ。

相手目線ってそもそも何なんだろう？とか
考え初めて、結局会話終わったりするんやけど

いや違うやん

まずその『自分の頭の中だけの世界』で
相手のことも分からんのに勝手に考えて
しかも最後は自分が都合いいように勝手に決めつけて。。。

もうそれが相手を理解しようとしてないって
ことやねんで。

そこから全部間違ってるよ。

『相手の目線が分からないんです。』
じゃあちゃんと会話しろよ。

『次商談組むんでその時会話してみます』
それだけじゃ遅いし、弱いって
なんでオンラインで完結させようと思ってるん。

相手目線が分からないんやったら直接話しにいけって。
飯とかいって 2 時間、3 時時間飲みながら会話したらいいやん。

そんなただでさえ相手目線わからんやつが
ズームのたった 1 時間で相手のことが
わかるわけないやろ？

結

案件獲得に限らずビジネスって
どれだけ相手の理解度を上げれるかって戦いやから

そこを理解度を上げるためにはどうしたらいいか？を
中心に考えてください。

それが一番早いのが飯いくことなんで
今案件探し中の人は
絶対お客さんをご飯に誘ってください。

それ 1 回いくだけで
お客さんの理解度も上がるし
仲良くなったら発注してくれる可能性も
ぐっと上がるからまずは行ってみよう。

個人開発でマネタイズは難しいと思ってませんか？

リモートの会社でも出社しよう

〇〇したいけど何から始めたらいいか

自分税理士ついてるエージェント使ってるんで確定申告とか気にしてないですって言ってるエンジニアやばいよ

確定申告の作業税理士に投げてるのはわかったけど
自分の支出ちゃんと見てる？

ザルになってない？

個人開発でマネタイズしたいなら一個だけ作ればいいです

良く成功してる IT サービスは 10 個、20 個作ったら
どれかが当たるみたいな風に言われてるんですけど

僕過去 3 個個人開発してるけど
全部〇円以上マネタイズしてます。

その理由ってのが
明確に使ってくれるお客さんを
目の前にまで連れてきた状態で使ってもらえるので

0→1 でマネタイズが確定してんで
開発も楽です。

あと 5000 円回したら確変当たるパチンコ台みたいな感じです。

で、実は一個作れたら
その基盤部分は次のサービス開発に応用できるので
実はそっちの方がインパクトでかいです"
エンジニアに向けたリール動画の台本を作ってください,"✅ タスク進めてみてわからないことがあれば聞きます

常識

非常識

# タイトルコール

「今は質問ないのでタスクを進めてみてわからないことがあればまた質問します」

認識違いを起こすやつ大体これです

# 問題提起

エンジニアがタスクアサインされた時に
最初タスク説明されて
認識合わせすると思うんやけど

なんか説明されたけどよく分からんかったな
とりあえずやってたら分からんとこ出てくるやろ

って感じで進めたけど
後でめちゃめちゃ考慮漏れや、認識ズレあって
期限まに合わんかったて経験ないですか？

# 問題拡張

それは会話できるときに
うやむやにしたのが原因です。

認識合わせは
どれだけ曖昧な部分をなくして
解像度をあげれるかが大事。

とはいえ会話で全部整理し切るのは大変やから
そんな時に使えるのがマインドマップ

# 解決策

タスク説明してもらった事を
こんな感じでざっくりリストアップして
じゃあここって具体的に言うとどうか？と

枝をどんどんふかぼる様に進めていけば
自然と解像度が上がって認識違いも減ります

認識違いが減って
ちゃんと期日通りにタスクこなしてたら
自然と単価は上がるからぜひ試してみて"
エンジニアに向けたリール動画の台本を作ってください,"エンジニアなら自分でググって解決しろ！分からんなら早く聞け！いやどっちやねん

常識

非常識

# タイトルコール、問題提起

エンジニアなら自分でググって解決しろ！
分からんなら早く聞け！

これの仕組みを解説します。

僕も今 PM やってエンジニア指導する立場やけど
全く同じ事言った事あるけど

実はこれ矛盾してるようで
上司の心境からしたら
全然矛盾してないってわかります。

# 問題拡張

結論お伝えすると
上司が部下のエンジニアに対しての心境は

『分からない事をまず自分で調べて考えて欲しいし、それでも分からないなら時間の無駄だからさっさと聞きに来て欲しいです。』

上司側からすると
部下の仕事が遅れた時は
自分がけつを拭かないといけないから
直前で焦らないように分からない事は
さっさと教えるから聞きに来て欲しい。

とはいえ、ただ無思考に聞きにこられても
本人の自走力上がらないし
自分の負担が増えるから良くない。

常にこの板挟みになってます。

皆さんからしたら自分の上司や先輩って
なんでも出来るスーパーマンみたいに
思うかもしれないけど

言うても同じ人間なんです
結構辛いんですよね。

もし現場の上司に
少し強く言われたとしても
間に受けて傷つくんじゃなくて

この人はどう言う心境で
そう言ったのかな？と
考えるようにしてあげてください。

そうすれば自分も上司も気持ちよく仕事ができます。

# 解決策"
エンジニアに向けたリール動画の台本を作ってください,"✅ 個人開発ってアイデアが無いとできないわけじゃなくて、toB 向けに作るのがいいよって話

個人開発に革新的なアイデアはいりません。

みんな個人開発って昔のメルカリみたいに、
たまたま誰も思いついてないアイデアがあって
1 発当たったらドカンと稼げるロマン砲みたいに思ってない？
確かに革新的なサービスって
こーゆうところから生まれるのも
事実やけど個人のエンジニアで出来ることじゃない。
しかもこれって
自分が面白いと思ったから
作りましたになるから
ユーザーがお金を払って利用してくれるのかはまた別の話。
・作ったはいいけど使ってくれません。
・ユーザー数は増えたけどお金は払ってくれません
むしろサーバー代だけかかるになる。
趣味でやるならいいけど稼ぎたいならこれは NG。
僕は今個人で WEB サービス開発して
毎月 10 万円以上安定的にマネタイズしてるけど
革新的なアイデアなんか無くて
お客さんと会話をしていく中で
""お客さんが求めてる物""が分かったから
それを作ったらお金を払って利用いただけたってだけ。
例えば YouTube の運用代行者の知り合いがいたから
YouTube の分析ツール作ってあげたり、
物販やってる人がいるから物販のリサーチツール作てあげたり
ユーザーの需要見てたらアイデアなんかなくても
いくらでも使って貰えるサービスは作れる。
でもエンジニアは技術や自己満の世界に逃げがちやけど本来見るべきはユーザーやで。

—|

個人開発にアイデアは入りません。
エンジニアの個人開発のイメージって

なんかたまたま誰も作ったことがない
なんか面白そうなアイデアを発見して

誰が使うかはわからんけど
作って発当たったらラッキー

みたいに思ってませんか？

このやり方をプロダクトアウトって言うんやけど
むりむりむり、そんなん再現性全くない。

趣味でやるならまだしも
それで本当にお金稼ごうと思ってるなら
絶対やめた方がいいで。

実際僕は個人で作ったサービスで〇円
毎月マネタイズしてるんやけど

このサービスを作れば
この人たちが喜んでくれて
かつお金を払って利用してくれるきが
分かってる状態でサービスを作ってるから出来てる。

これをマーケットインっていうから覚えといて。

ほとんどのエンジニアは
利用するユーザーのことを
考えてサービスを作らんから
マネタイズできない。

けどこっちは再現性高いから

サブスクの収益って、、

完全版はプロフから受け取れるよ

個人開発みたらソロメイカーみたいな
なんか旅の日記をつけるアプリを作りました

みたいな確かに面白そうやなとか

メルカリやったら誰でもフリマできるアプリですとか

あー言う何か独自のアイデアが無いと
できないって思ってるかもしれんけど
全然そんな事なくて

要は一番大事なのってマネタイズできるかどうか。

確かにあー言うアイデア系ってすごそうに見える反面、大体 toC 向けやし、そもそもお金払って使うかってのはまた別の話

僕が言ってる個人開発は
toB に向けた個人開発

確実に使いたい人がいる状態で
マネタイズしに行くから
全然戦い方が違うよって事

今日開発したその機能誰が使うか知ってるん？

---"
エンジニアに向けたリール動画の台本を作ってください,"✅ 今日開発したその機能って誰が使うか知ってますか？

MTG でざっくりこう言う属性の
お客さんが使ったことあるってのは
聞いたから知ってますって人もいると思うけど

じゃあ実際にそのユーザーにあって
話をきいたことあります？

たぶんないですよね？

エンジニアが収入頭打ちなるのって
そう言うとこで

そもそもエンジニアの単価だって
ユーザーが使ってくれて
お金払ってくれてるから支払われてるんやからね。

結局デスクの上でエンジニア仲間や
ソースコードと会話するだけになってしまって
全然ユーザーに向き合ってない。

ユーザーが使いやすいように、便利になるようにって
考えてれば自然とレイヤーも上がります。

エンジニアなんだから
そこまでする必要ないやんって思うかもやけど

いや、みんながしな

---"
エンジニアに向けたリール動画の台本を作ってください,"✅【1 年に 1 回案件変えてるエンジニアは危険】

1 年に 1 回案件変えてるエンジニアは危険です！

フリーランスエンジニアによくありがちな

1 年に 1 回ぐらいで案件変えて
新しい刺激を取り入れていくスタイルは
確かに目先の単価はあがるし

フリーランス 3 年目までは
まずは色んな環境を知りましょうで
むしろ良いんだけども

それ以降ずっとその働き方してると
浅くて痛い奴になります。

分かりやすく言うと
セフレはいっぱい出来るけど
本命彼女は出来ない奴になります。

3 年目以降はどちらかと言うと
1 つのプロジェクトの成功に向き合って
深く関わって行くような経験があると
フリーランスとしての深みが出るので

どこかで 1 つの案件で
少なくとも 3 年ぐらい
深い関わりを持った経験をするのが大事

人員の入れ替えが激しい IT 業界だからこそ尚更
それが差別化になります。"
エンジニアに向けたリール動画の台本を作ってください,"✅ エンジニア 2、3 年目ぐらいの人が AI を一番使いこなせてない

経験 2,3 年ぐらいの
中堅ぐらいのエンジニアが
一番 AI を使いこなせないポジションにいます。

SNS で開発系の AI 情報とかを見てると
プロの驚き屋さんたちが

・〇〇っていう新しい AI が出ました〜
・エンジニアじゃなくてプロンプト 1 発でテトリスが作れるんですよ〜！

みたいなの言うけど
今案件に入ってるエンジニアからしたら

『テトリスなんか作る場面ある？』

『既存で動いてるものの機能追加がメインだから
そんな 0 からサービス作れる
AI 知っても今ないんやけど？』

ってなりますよね。

エンジニアが実践の中で
どう使いこなすか？って話は全然話されない。

結果情報に踊らされるし
たまに新しいもの使ってみても

ん？なんか思ってたんと違うな？

ってなって AI 活用を諦めてしまう。

だからぼくがエンジニアが AI を活用して
作業するだけの効率化する実践テクニックや
AI に負けない本質的なエンジニアになるための
ノウハウを発信してるので他の動画も見てください

---"
エンジニアに向けたリール動画の台本を作ってください,"✅ エンジニアって市場価値高いから仕事は一生困らないんですよね？っていつの話ししてんねん

常識

非常識

# タイトルコール

エンジニアは市場価値高いから仕事は一生困らないんですよね？っていつの話ししてんねん！

# 問題提起

確かにみんながエンジニアになり始めた
2,3 年前の常識やったら

エンジニアはひくてあまたやし
月単価も 60 万円以上は確実やから
一生安泰な仕事みたいに言われてたけど
もう今は常識変わってるよ。

# 問題拡張

これからは開発 AI のせいで
仕事が増え続けるエンジニアと
仕事が減るエンジニアが明確になる。

結論
企業目線だと
元から技術力の高い優秀なエンジニアは
AI のおかげで作業効率が上がって
質の高い仕事を多くこなせるから
どんどんお願いしたいし

逆に経験 2、3 年目ぐらいで
技術力はそこそこだけど単価だけ高くなってた
ジュニアエンジニアのコスパが悪くなるから
そいつらの予算を削って
優秀なエンジニアの単価を上げようって流れになります。

つまり格差が広がります。

これは今に始まった話じゃなくて 5 年前から

『エンジニアが足りない！』
『でも未経験はいらん！』

みたいな矛盾があったけど本質を見たら
【お金が払う価値があるエンジニアが足りない】
って話なのと同じです。

格差が広がる前にスキルを上げましょう。

# 解決策

他の動画でベテランエンジニアに
負けない方法を解説してるから全部見てください。

# 解決策

# CTA

---"
エンジニアに向けたリール動画の台本を作ってください,"✅ 月収 12 万円の会社員エンジニアから月単価 130 万円まで上げた方法

常識

非常識

# タイトルコール

月収 12 万円の会社員エンジニアから
月単価 130 万円のフリーランスになるまでに
やった事を全部話します。

① 開発経験が詰める会社に転職して 1 年実務経験を積む

② エージェントに登録してフリーランスエンジニアにつなって月単価 50 万になる

③ 半年後案件を変えて月単価 60 万になる

ちなみに単価を上げたければ案件変えるのが一番早いです

④ エンジニアをしながらマーケティングなどのビジネススキルを身につける

⑤ 個人で簡単なツール開発や、LINE 構築の案件を取る

⑥ 月単価 70 万の案件を個人で取る

⑦1 年間案件継続して
PM になって月単価 100 万円になる

⑧ もう一年案件継続して月単価 130 万円になる

1 番のポイントは
個人で案件を取ったり
ビジネススキルを身につけて
お客さんの課題解決ベースで仕事をしてきた事です。

ただ、作業するだけのエンジニアには
月 130 万も払ってもリターンが合いませんが

課題解決して売り上げアップやコストカットが
見込めるエンジニアには
リターンが合うのでお金を払ってもらえます。

---"
エンジニアに向けたリール動画の台本を作ってください,"✅ フリーランスエンジニアって安定に見えるけどめっちゃ不安定やで

常識

非常識

# タイトルコール

フリーランスエンジニアって
めっちゃ不安定じゃないですか？

# 問題提起

よく案件はエージェント使えば
1 ヶ月で見つかるとか

3 ヶ月更新やから
いきなり案件途絶える事がないから

フリーランスエンジニアは安定します
って言う人おるんやけど

大体そう言う人って
エンジニア以外の収入ないです。

確かに月 60 万〜80 万ぐらいは
毎月安定的に貰えるけど
冷静に考えてみてください。

今までは月収 20,30 万だったから
最悪、体調不良とかで 1 ヶ月働かなくなっても
貯金や親にちょっとお願いすれば

リカバリーできる金額でしたが

今って 1 ヶ月休んだら
一撃で 60 万円以上の収入がなくなるんですよ？

しかも稼げるようになってから
生活水準上がってる人がほとんどやから
家賃とか普通に 10 万超えてないですか？

なんかあったら 1 発で収入がなくなる。
それがフリーランスエンジニアです。

# 問題拡張

# 解決策

エンジニアが本当に安定したいなら
月単価以外の収入減を作ってください

実際僕もエンジニアの単価とは別に
自分でサービスを開発して
それで毎月 10 万円以上の収益を立ててるんで

最悪体調崩して働けなくなっても
固定費はそれで賄えるので生きていけます。

で、よく収入源を複数作りましょうって言うと
じゃあ月単価の案件掛け持ちしますって言う人が
現れるんですけどこれは絶対にやめてください。

労働を重ねる事になるので
シンプルにしんどいですし
なんかあった時に
一撃 60 万円のダメージが
一撃 80 万,100 万とむしろダメージが増えます。

エンジニアが収入減を増やして
安定するロードマップはプロフから
無料で配ってるので
今すぐ受け取ってください

# CTA

---"
エンジニアに向けたリール動画の台本を作ってください,"✅ フリーランスエンジニアがレイヤーを上げるべき理由

# タイトルコール

フリーランスエンジニアがレイヤーを上げるべき理由

# 問題提起

今フリーランスエンジニアとして案件に行ってる人って
ほとんどが末端の作業者ポジションだと思いますが
それだと収入には天井が来ます。

# 問題拡張

なぜなら作業者ポジションの人に
特別単価高いお金払っても
企業側としてはメリットがないからです。

例えば大谷翔平みたいな
1 人いるだけで試合の勝率をあげれるような選手なら
100 億とか払ってでも欲しいってなりますが

別に一般レベルの選手に対して
めっちゃお金払ったらチームの勝率上がるかって行ったら
そんなことないですよね？

エンジニアもそれと同じです。

あなたに 100 万円払ったらその分

・チーム全体の開発スピードが上がったり
・無駄を改善してコストカットができたり
・企画を考えて売り上げが増えたり

とか何かしらの成果を出せないと
わざわざ相場以上のお金を企業は払いません。

大体作業者エンジニアの単価は 80 万ぐらいが上限になってます。

# 解決策

もしその壁を突破したいないなら
レイヤーをあげて設計を考えたり、チームの効率化を考えたりする
ポジションを狙っていきましょう。

ちなみに僕の単価は 130 万円です。

# CTA

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ プログラミング勉強しても収入は上がりません

タイトル&問題提起
プログラミングを勉強しても収入は上がりません！

問題の深掘りと煽り
みんな 単価を上げたいと思ったらプログラミングのスキルを増やそうするじゃないですか？ これほんまにみん勘違いしてる

僕自身は
フリーランスなって 1 年ごとに
70 万、100 万、130 万と単価を上げてきたけど
正直言語の勉強なんかほとんどしてない。

(共感)

確かに世の中のエンジニアはプログラミング  勉強しろって言うからそれに影響されてしまうのはわかるけど  言うて単価 5 万、10 万ぐらいしか上がってなくない？

いきなり単価 30 万上がりましたとかってあんまないよね。

別に技術が大好きでで  エンジニアやってる人はそれでいいと思うけど、

収入上げたくてエンジニアなったタイプは
多分そんな技術好きじゃないよね？

インサイト深堀り

このままフリーランスエンジニアの働き方続けても

言うてプログラミング”だけ”で稼ごうと思っても  せいぜい月 80 万円ぐらいが天井やから
もっと違うスキルを身につける必要はあります。

実際僕が一気に単価 130 万まで上がった理由は

開発スキルだけじゃなくて
マーケティングスキル身につけて
お客さんの売り上げやコストカットを
目的に開発ができるようになったからです。

---"
エンジニアに向けたリール動画の台本を作ってください,"✅ 認識合わせの提案を部下からやると評価上がるって話

常識

非常識

# タイトルコール

認識合わせの提案ちゃんと自分からやってますか？

# 問題提起

若手のエンジニアの中で
先輩エンジニアから
タスク説明とか認識合わせをしましょうって
言われないと会話しない人ってたまにいるんですが

指示待ち人間は先輩評価めっちゃ下がります。

確かにまだ現場に慣れてないし
下手なこと言ったら怒られないか不安やから
待ちになるのも分かるんやけど

逆にみんな指示待ちになりがちやからこそ

自分からタスクくださいって言いに行ったり
ここの部分認識合わせておきたいので
15 分時間もらえませんか？

ってちゃんとコミニケーション取りに行くだけで
先輩評価はめっちゃ上がりますよ。

開発現場においては
自分の直属の先輩に評価して貰えると
それが PM などの上の人に話伝わるから

自然と案件の継続も貰いやすくなるから
積極的にコミニケーション取りに行こ

# 問題拡張

# 解決策

# CTA

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ 開発 AI が進化して一番被害受けるのが単価高いエンジニアです

常識

非常識

# タイトルコール

開発 AI が進化して一番困るのは
単価が高い 2,3 年目のエンジニアです

# 問題提起

最近、毎週のように開発 AI が進化してて
先月やばいって思ってたサービスでも

今日発表された
このサービスの方がいいやんってなって
代謝が早いです。

あ、もう cursor は解約しました。

# 問題拡張

特に AI によって
効率化されてるのって決められた仕様や設計通りに
開発をするって言う実装作業ですよね。

今まではこの実装作業が
難しかったし、大きいサービス作るためには
たくさんエンジニアが必要だったので

実装ポジションのエンジニアでも
単価高かったです。

しかしだんだんとそっちに高単価払うよりも

レイヤーが高い
ベテランエンジニアの単価を高くして
AI 使って開発してもらった方が
企業としてはコスパがいい事に気づき始めてます。

実際僕が参画してる案件でも
昨年までは人が足りないから
月単価 70 万ぐらいで
エンジニア新しく採用しようかなと思ってましたが
AI のおかげで必要無くなりました。

# 解決策

いま単価 60 万円以上のエンジニアは
実装作業に価値は無くなっていくので

コーディング以外の付加価値をつけないと
必然的に単価は下がります。

どんな経験が必要なのかお伝えしておくと
これから開発する機能を誰に使ってもらって
どうやって売り上げを立てていくかを考える
マーケティングスキルです。

売り上げ作れないエンジニアに
価値は無くなっていくから
絶対に覚えといてください。

# CTA

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ エラーが絶対解決できる方法教えます

# タイトルコール

プログラミングのエラー
絶対に解決できる方法教えます！

# 問題拡張

エラー解決の時は
めっちゃ大事な考え方があって

最初はエラー箇所周りを探すのはもちろんやねんけど
15 分探して解決できなかった時は

一回全体の視点で見ないと
原因じゃないところを一生探すことになるよ。

例えばフロントで undefined エラーが出て、
ひたすらフロントのコードを探したけど、
実は DB に該当データがなかっただけ
みたいな事ってちょくちょくない？

# 解決策

僕がやってるデバッグの考え方をお伝えすると

今作ってる機能をまず
フロント → バッグ →DB と広い視点で
データがどこまで疎通できてるのかを
まず確認する様にしてください。

例えばさっきの undefined のエラーやったら

VS コードのデバッガーや
console.log でログ出して

・まずフロントからバックにちゃんと疎通できているかを確認する
・次にバックから DB にちゃんと繋がってるか確認する
・DB にちゃんとデータがあるか確認する

みたいな感じで全体像を見てください。

そしたらフロントでバグ起きてたけど
そもそもの原因は DB にデータがなかったとか
データはあったけどサーバーのこの関数のところで
加工処理ミスってたとか

根本原因がわかります。

エラーがなかなか解決できな時ほど
どんどん視点が狭くなっちゃうから

そんな時ほど落ち着いて
全体像をみる様に意識してみて

絶対バグ解決できるから。

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ 進捗報告の時に今やってる事だけを報告されると PM 側はイラっとします

今やってる事だけ言ってなんか進めてる感出したくなるのはわかるけど

今手持ちのタスクのうち
今これをやってて

これはいつまでに終わりますっていう
全体を聞いてます

# タイトルコール

タスク進捗を報告する時、今やってることだけを報告してませんか？
それめっちゃイラっとされてますよ。

# 問題提起

例えば機能開発のタスクの進捗共有する時に

・新規登録機能の実装を進めてますとか
・一覧取得の実装を進めてます

みたいに
今やってる部分だけ報告されると
結構困ることが多くて

先輩エンジニアが報告の時に知りたいのって
今何をやってるかももちろんやけど

あとタスク何が残ってて
それら含めていつまでに終わらせる予定なのか？

って言う
進めれてないタスクについて
ちゃんと把握しときたいんよね。

# 問題拡張

もし他のタスクが遅れそうなんやったら
違う人にアサインするとか考えれるのに

そこを報告せずに曖昧にされると
マネジメントする側としては
めーっちゃイラってする。

もうほっといてもタスク進めてくれるわってぐらい
信用できるエンジニアならいちいち細かいことは気にせんけど

むしろ自走できないエンジニアほど
報告の仕方をミスってる。

先輩が安心する進捗報告の仕方教えてとくと

・今進めてるタスクと
それがいつまでに終わる予定なのか

それと
・進めれていないタスクが今どれだけあって
それらはいつまでに終わらせる計画なのか

これをセットで報告してあげて

# 解決策

# CTA

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ 進捗報告上手くいってる時だけやってませんか？

# タイトルコール

エンジニアは上手く言ってる時しか進捗報告しないやつ多すぎです

# 問題提起

これ仕事でも、講座で指導する時でも全部そうやねんけど
タスクの進捗いい時とか
なんか成果が出た時とか

いいことがあった時だけ
報告してくる人いて結構多いんやけど
このパターンは将来落ちやすい。

むしろ上手く言ってない時ほど早く報告すべき。

# 問題拡張

確かに上手くいってない時って
やっぱ自信を持って報告できないのもわかるんやけど

そうすると
より成果が出づらくなるし
成果が出ないからより報告できなくなるって言う
負のループに入るんよね。

指導する側としては
今上手く言ってないことを
ちゃんと報告してくれたら

仕事ならこれはこっちで巻き取ってリカバリーするとか
講座なら、そこで詰まってるんやったら次こういう提案の仕方すると通りやすいよ

とか
何かしら改善策を出してあげれるから
早くいって欲しいんよ。

報告せずに 1 人で悩んで勝手に自爆されると
お互い困るから

上手く言ってない時ほど報告する、
これ明日絶対からやってな

# 解決策

# CTA

マインドセットが
良い結果が出た時だけ報告するだと

よくない時ほどやる

負のループに入る

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ ぶん投げるようなプルリク出してませんか？

# タイトルコール

先輩にぶん投げるようなプルリク出してませんか？

# 問題提起

アサインされたタスクが終わって
やっとプルリク出して
あー終わったーってなった時に

先輩からめっちゃ指摘が入ったら
テンション下がるかもしれんけど

それ先輩側はもーっとテンション下がってます。

# 問題拡張

レビューで指摘をめっちゃ受けるエンジニアって
プルリクの出し方に問題があると思ってて

今回のタスクで書いたコードの
意図を説明せずに
とりあえずプルリクだけ作って

「レビューお願いします！」

みたいな感じで
ぶん投げるような出し方してない？

これって
先輩からしたらどんな意図で
書かれてるのかとかがわからんから

ローカルで動作確認する作業が増えたり
変更箇所から他に影響がないかチェックする手間が余計に増えたりと

めっちゃ負担になるんですよね。

# 解決策

だからこれからプルリクを出す時は
プルリクにこのファイルはこういう意図で書きました
ってコメント残したり

もし先輩の時間が取れるなら
15 分だけレビューの時間くださいって言って

自分が書いたコードを
一通りどんな流れで実装したのか？を説明する習慣をつけると

自分のスキルも上がるから
自然と先輩からの指摘も減るし
信用が積み重なるから
よりレベルの高い仕事も任せてもらえるようになります。

# CTA

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅AI にコード書かせたけどそれバグないかちゃんと自分で責任もてますか？

# タイトルコール

AI に書かせたコードそのままプルリク出してないですか？

# 問題提起

最近は AI 使って開発することが増えてきて
今までに比べたら格段に
開発スピード上がったと思うけど

ちゃんと書いてもらったらコードが
どんなロジックで動いてるのか？
ちゃんとバグがないものになってるか？

自分で理解してから
プルリク出してますか？

# 問題拡張

これレビューする側としては
コードを見た時に
あ、これ AI に書かせたんやろなってのは正直わかります。

AI に書かせること自体は
全然いいし、効率も上がるから
どんどん活用して欲しいとは思いつつも

なんかバグがあった時に
このコードはどんな意図で動いてるのか？
って聞いて

答えれなかったらアウトやなって思います。

# 解決策

AI はあくまでコードを書くっていう作業の部分を
効率化するものであって

どんなコードを書くべきかとか
良し悪しを判断する
思考の部分も AI に丸投げすると

AI 以下のエンジニアになってしまうから気をつけてください。

# CTA

AI にコード書かせたけど
そのコードがどう動いてるのか
仕組みをわからずにとりあえず書きましたって
出される

レビューする側としては
本人も悪いと思ってないし
もちろん AI が責任取るわけでもないので
行き場のない怒りを通り越して絶望します

---

"
エンジニアに向けたリール動画の台本を作ってください,"✅ エラー解決できない時こんなやり方してないですか？

常識

非常識

# タイトルコール

フロントで undefined エラーが出て、
ひたすらフロントのコードを探したけど、
実は DB に該当データがなかっただけ…なんてこと、
ありませんか？

# 問題拡張

エラー解決の時は
めっちゃ大事な考え方があって

最初はエラー箇所周りを探すのはもちろんやねんけど
15 分探して解決できなかった時は

一回全体の視点で見ないと
原因じゃないところを一生探すことになるよ。

# 解決策

具体的に僕がやってる
デバッグの考え方をお伝えすると

今作ってる機能をまず
フロント → バッグ →DB と広い視点で
データがどこまで疎通できてるのかを
まず確認する様にしてください。

例えばさっきの undefined のエラーやったら

VS コードのデバッガーや
console.log でログ出して

・まずフロントからバックにちゃんと疎通できているかを確認する
・次にバックから DB にちゃんと繋がってるか確認する
・DB にちゃんとデータがあるか確認する

みたいな感じで全体像を見てください。

そしたらフロントでバグ起きてたけど
そもそもの原因は DB にデータがなかったとか
データはあったけどサーバーのこの関数のところで
加工処理ミスってたとか

根本原因がわかります。

エラーがなかなか解決できな時ほど
どんどん視点が狭くなっちゃうから

そんな時ほど落ち着いて
全体像をみる様に意識してみて

絶対バグ解決できるから。

# CTA

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅20 代後半でリーダー経験がないエンジニアはやばいって話

# タイトルコード

20 代後半でリーダー経験がないエンジニアはやばいです。

# 問題提起

普通は社会人やってたら 20 代後半ぐらいには
勤続 5 年目ぐらいになって
何かしら部下や後輩を持って指導する
責任者やってるのが当たり前やけど

今エンジニアの人って意外と経験な
理由を説明すると

大体がの人が
新卒で 22 歳ぐらいに入社した会社で 1、2 年勤めたけど
何かしらの理由でエンジニアになることを決意して
転職したよね。

で、24 歳ぐらいから会社員エンジニアになるわけやけど
ここも 1、2 年実務経験積んだら
独立するために退職する

26 ぐらいにフリーランスになって
そこから 1 年に一回くらいペースで
案件変えていく。

大体こんな感じやねんけど
つまりずっと 1、2 年のペースで環境変えてるから
いつまでも新人ポジションで
それが当たり前になっちゃってるんよね。

この状況が結構危険で
普通やったら 20 代後半以降は
リーダーになったり後輩を持ったりと
責任がある仕事が求められるし
30 代以降とかもはやそれが当たり前になります。

要は責任あるポジションができるかどうかやから
これから追いつきたい人は

今の現場で積極的にリーダーポジション狙いに行くか

それがハードル高いなら
1 件 5 万円でいいから個人で案件とって
やり切る経験をすると

責任者としての自覚が出てくるからおすすめです

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ なぜ仕事が遅いエンジニア

仕事遅いエンジニアってタスク説明された後に
ちょっと休憩って 30 分ぐらいダラダラしてる
時間があると思うけど

その 30 分が 8 時間のロスにつながってるからね。

これ聞いたことある人多いと思うけど
エビングハウスの忘却曲線ってのがあって
今聞いた話も 20 分後には 42%忘れます。

この前提で考えるとわかりやすいんやけど
休憩した後にいざ作業しようってなった時に

ちょっとあれ何からやればよかったっけ？
みたいな感じで忘れて
議事録や MTG の録画見返したりとかの

思い出す時間がありませんか？
仕事遅い人って手を動かすのが遅いってより
意外とそう言うロスタイムが積み重なって

気づかないうちにどんどん差を
付けられてるんですよね。

じゃあこれを無くすために
僕がやってるテクニックを紹介すると

MTG とかでやる事について話をしたら
まず終わってすぐ、

記憶が新鮮なうちに
この後やるべき事を箇条書きでメモしてから
休憩に行きます。

特に僕は結構 ADHD 気質があって
結構物忘れしやすいから

もうタイムアタックばりに
忘れる前に必死にやる事を書き出します。

そうするとその後休憩したり時間が空いても
そのメモさえ見れば一瞬で思い出せるから

すぐに作業に取り掛かれます。

こうすると思い出す時間っていう
ロスタイムが無くなるから

今より 2 倍、3 倍仕事が早くなるから
ぜひためしてみて

---

"
エンジニアに向けたリール動画の台本を作ってください,"✅ 先輩エンジニアの技術力高すぎて
MTG 全く話ついていけない時の対処法

常識

非常識

# タイトルコール

先輩エンジニアたち MTG で大事そうな話してるけど
技術レベル高すぎて全く話ついていけないって
ときの対処法を教えます。

めっちゃ必死に話についていこうとするけど
会話聞いてたら分からん単語ばっか出てきて
頭パンク、思考停止、
なんも分からんってなってませんか？

まず話ついていこうとするのを
諦めてください、諦めたら解決します。

これ脳の使い方がめっちゃ大事なんやけど

一番良くないのって
話ついて行くことに無理やり
脳のリソースを使った結果
逆に思考停止状態になっちゃう事なんですよね。

思考停止になると後半とか何話してたのか
何も覚えてなくてこれが最悪ですよね。

逆にやばい時は話着いていくのを諦めると
俯瞰的に見れるから脳に余力ができます。

で、やって欲しいのは
できた余力を先輩たちが話してる中で
出てきた分からない言葉を
メモする事に全振りしてください。

その時オンラインなら画面録画とか
リアル MTG なら iPhone で録音しておくと良いです。

MTG が終わった後すぐに
メモした分からない単語について調べてざっくり理解した上で MTG の録画を聴いてください。

そうするとさっきわからなかった事も
分かるようになってます。

もしそれでも分からないことがあれば
この部分がわからなかったんですけどって
先輩に聞きに行きましょう。

これをやってるとだんだん
先輩たちの話が分かるようになってくるから
ぜひ試してみて

# 問題提起

# 問題拡張

# 解決策

# CTA

---
"
エンジニアに向けたリール動画の台本を作ってください,"✅ フリーランスエンジニアとして稼ぎ続けるためにはどれくらいののスキル感が必要なのか？

常識

非常識

# タイトルコール

フリーランスエンジニアとして稼ぎ続けるために
必要なスキルレベルを解説します。

# 問題提起

先に結論言っておくと
・今稼ぐためのスキルと
・稼ぎ続けるためのスキルは全く違います。

今、会社員エンジニアで
実務経験 2,3 年ぐらいある人やったら

フリーランスになることも視野にあるけど
自分のスキルで通用するんかな？って思うよね。

僕も今でこそ月単価 130 万円もらってますけど
フリーランスなる時は 50 万の案件で
めっちゃビビってた。

でも安心して、普通に行けるから。

最低限の必要なスキル感で言うと
会社員として先輩にレビューして
もらいながらやったら
フロントかバックどちらか
1 機能自走して開発できるスキルがあれば

余裕でフリーランスになれるし
月 60 万円〜80 万円は稼げます。

今すぐフリーランスなって
稼げるようになるだけやったら

エージェント 5 個ぐらい登録して
その中で単価 70 万円以下の
案件は行きませんってお伝えしたら

勝手に面談組んでくれるから
必ず案件は決まります。

あとは今まで通り
ちゃんと仕事してれば普通に継続も貰えます。

で、冒頭でもお伝えしましたが
これは今稼げるようななるためのスキル感であって

今後稼ぎ続けるために求められるスキル感は
全然違います。

今はフリーランスエンジニアは
ボーナスタイムやから
まずは今のうちに月収を上げておくのは
絶対やった方がいいんやけど

稼ぎ続けるためには
ビジネス視点を持って開発できるスキルが大事

いくつか例をお伝えしておくと
・マーケティングスキル
・営業スキル
・データ分析スキル

今はまだ大丈夫やけど
AI によって開発スキルがあるだけでは
価値がなくなってくから

そのスキルをどう使って
売り上げアップやコストカットに繋げるか？って
視点で仕事ができる
エンジニアが稼ぎ続けます。

# 問題拡張

# 解決策

# CTA"
お金周りの不安から解放される系の理想を刺激,"
フリーランスエンジニアの収入源しかない時は

『労働を辞めた瞬間収入が0になる』

こんな不安が常にありました。

マーケティングを勉強して
労働依存じゃない収入源を手に入れてからは
最悪1ヶ月働かなくて良いって思うと安心できるし
新しいことに挑戦する気力にもなってます。"
時間的な自由度が増える系の理想を刺激,"夜型なんで
朝5時ぐらいまで仕事して
昼ぐらいに起きるみたいな生活しているのですが

これが一番しっくりきてて生産性高い。

これは会社員的な働き方をしてれば
この生活を実現するのはむずくて

マーケティングを勉強して
エージェントを通さず
個人で案件を取れるようになったら実現できたことです。"
人間関係の悩みが解決される系の理想を刺激,"マーケ学んで
個人で案件取れるようになってからは
自分でやりたい仕事を選べるようになった。

その結果自分の意思で

・この人と仕事したい
・この人とは仕事したくない

が選択できる自由が手に入りました。

結局、仕事の悩みの９割は
人間関係が原因なので
９割の悩みが排除されたのは大きいです"
その他の縛りから解放する系の理想を刺激,"今手持ちの案件は全て
個人でとっており

✅フルリモートでどこで仕事してもOK
✅期限さえ守ればいつ仕事してもOK

そんな生活を実現しています。

昔、片道2時間かけて
毎日会社に出勤していた頃を考えると
想像もできなかった。"
現実感を出すツイートによって再現性を担保,"月収100万円って
一部の天才しかいけないと思われがちですが

✅フリーランスエンジニア開発案件で60万円
✅副業のマーケ系案件で40万円

取れば良いだけです。

フリーランスエンジニア、
マーケターとしても

普通に誰でもいけるレベル感なので
意外と簡単です。"
学び、行動すれば変われるという教育を行う,"未経験からでも
プログラミングを勉強したら
2年で月60万まで稼げるようになったし

そこからマーケティングを勉強したら
半年で月120万稼げるようになった。

ぶっちゃけ月100万円ぐらいまでは
ただ愚直に学んで行動するだけでいけます。"
過去のひどさや平凡さを伝えて再現性を担保,"僕は高卒で、しかも高校の偏差値が40台、新卒の手取り収入で月12万円という
誰が見ても落ちこぼれ

そんなやつでも
プログラミング、マーケ勉強して
月100万稼げました。

過去の学歴とか関係ない、
今からどれだけ努力するかで人生変えれます。"
ハードルの低さや容易性を伝えて再現性を担保,"エンジニアから
マーケターになるためには

マーケの仕事一本にするみたいなことをしなくても
開発の案件をこなしながら
副業として少しずつマーケターの仕事をしつつ
ちょっとずつ移行していけば大丈夫です。

まずは副業マーケターとして
本業と同じぐらい稼ぐことを目標にしましょう。"
やり方や道を示してあげることで再現性を担保,"【エンジニアからマーケターに転身するための5ステップ】

①DRMを学習
②Lステップを学習
③ライティングを学習
④アフィリでもいいので物を売って実践してみる
⑤数字を見てLステップ、ライティングを改善

特に④⑤が最も「重要」

マーケティングは座学だけでは身につかないので『実践、改善』が命
"
行動しなくて失敗したエピソードを伝える,"昔は勉強嫌いで大して努力もしてきませんでしたが
人生変えようと思い
今ではエンジニアとマーケティングで
月収100万円稼いでいます。

勉強すれば誰でも変われるってことがわかったので

もしあの時から、今やってることを勉強していれば
今頃もっと収入が高かったはずなので後悔しています。"
行動力があって上手くいった出来事を伝える,"よくどうやって案件そんな取ってるんですか？って聞かれるんですがいたってシンプルで
オフラインの露出をとにかく増やすことです。

簡単に言うと入ってるコミュニティーの
オフ会はほぼ全部行きます。

昨年は合計30個以上のイベントには参加しています。

結局は人対人の付き合いなんで
オフでたくさんあったことある人の方が信頼できるし
そうすると自然と仕事の話がきます。

ふっ軽さこそが誰でも今すぐできる
稼げるスキルです。"
行動が遅いといくらの損失に繋がるかを伝える,"フリーランスエンジニアになって
最初の半年ぐらいは
新しいことをせず
月収60万ぐらいで停滞していたのですが

マーケを勉強してからは
月収100を安定させているので

単純計算で月の差額100-60=40の
半年分で240万円の利益を失ってます。

行動が遅れるということは
それだけ損失につながります。"
行動のハードルを下げるようなツイートをする,"エンジニアからマーケターに転身するために
がらっと仕事を変える必要はありません。

本業のエンジニアで安定的に稼ぎながら
副業でマーケティングの仕事で収益を得て
少しずつ移行していけばOK。

まずはエンジニアの安定感と
マーケの青天井さの良いとこどりをしてください。"
フットワークの軽さを表現する,"先輩経営者から
一回20万円ぐらいする沖縄旅行に誘われた時

少し痛い出費ではあったが
これはチャンスだ！と思い
即決で参加しますと伝えました。

その結果、旅行代を余裕で回収できるぐらいの
案件に繋がったから
やっぱり行動しか勝たんって感じです。"
お金をケチって損したエピソードを伝える,"未経験の時
3ヶ月ぐらい独学で努力したけど
結局挫折し、

プログラミングスクールで学びんだ結果
二年後エンジニアで月60稼げるように。

当時手取り12万円ぐらいだったので、3ヶ月お金をケチったことで

✅月の差額60-12=48万円の3ヶ月分で

144万円稼げたはずの
お金を失ったことになります。"
節約や貯金がお金を減らしている事を理解させる,"エンジニアで稼げるようになったら
貯金をしだす方が多いですが

みんなその瞬間一気に停滞しています。

逆に収入アップしている人に共通するのは
勉強にお金をかけている。

今、預金の金利が0.001%とかの時代なので
自分という金利1000%以上目指せる商品に投資しましょう。"
お金を使う恐怖を克服したエピソード,"今年は合計300万円分ぐらいマーケティング系の学習にお金を使いました。

最初は2000円のオンラインサロンに入るだけで
3日ぐらい悩んでいたけど

プログラミングスクールに60万円払ったら
月60万円稼げるようになったので
お金を払うとお金を稼げるという
法則を見つけてしまったからこそ
学びにお金をかけています。"
大きい金額を出して読者の金銭感覚を変える,"プログラミングに60万円払ったら
年収が700万になり、

マーケティングの学習に300万払ったら
年収が1200万になりました。

お金は使えば使うほど増えます。"
お金は使わなきゃ無価値と教育する,"若いうちにやってはいけないこと

・貯金
・安いからで選ぶ
・同じレベルの人とつるむ

多少高くてもお金を払って
レベルの高い人から学ぶ。

これができないといつまでも
レベルが低いままだし、収入も上がらない。"
普通の人とは別の見方をする事例を共有,"ある程度までいくと
新しいプログラミング言語を勉強したりしても
月の収入は数万〜数十万しか収入は上がらない。

しかしそれに気づいて無い人が多い。

一定まで来たら
マーケティングを掛け合わせることで
月数百万〜収入が上がる可能性にベットしたほうが　圧倒的にコスパ良いですよ。"
具体的に過去に自分がやってきたことを共有,"本当は良く無いけど
0→1で副業をやり始めたときは

会社で１時間の仕事を依頼されたら
ショートカットキー研究したり
効率化を極めることで
30分で仕事を終わらせる。

残った30分でこっそり副業の作業をしていた。

本気で時間を捻出するならこれぐらいやります。"
抽象度の高い話を具体化する,"マーケティングって
抽象度が高い言葉なので

ぶっちゃけ初心者からしたら
何から始めればいいの？ってなりがち。

僕のおすすめを言っておくと
まずはLステップを勉強すること。

「売り上げを上げるには何をすればいいか？」

って考えてLステップを勉強してると
何をすべきかが順番に見えてきます。"
具体的なノウハウを話す,"【エンジニアからマーケターになるための5ステップ】

①DRMの全体像を学習
②Lステップを学習
③ライティングを学習
④アフィリでもいいので物を売って実践してみる
⑤数字を見てLステップ、ライティングを改善

特に④⑤が最も「重要」

マーケティングは座学では身につかないので『実践、改善』が命"
もったいないを活用する,"僕もそうだったのですが
フリーランスエンジニアで
月60万円ぐらい稼いだら

安心した結果、停滞する人が多くて非常にもったいない。

そこに至るまでの継続力とマインドがあるなら

マーケティング学べば
月100万、200万と目指せるポテンシャルがあるから
まだまだ上を目指してほしい。"
過去の自分を否定し今の自分を褒める,"昔はただ言われた物を作るだけの
エンジニアでしたが

マーケティングを学んで
・どんな機能がユーザーに喜ばれるのか？
・どうすればより多くの人に使ってもらえるのか？

を考える立場になりました

その結果
市場価値も上がり、
自分のやりたいことを実現できるので
とてもやりがいを感じています！"
今すごい部分と足りていない部分を伝える,"フリーランスエンジニアになって
月50万以上稼いでる人って

しっかり勉強して
結果にコミットすることができるので
めっちゃ優秀な人が多いです。

ただそこで止まってしまうのは勿体無くて
そのコミット力をマーケティングに向ければ
余裕で月収100万円以上に加速します！"
周りのすごい人と同じであることを気づかせる,"インフルエンサーの２大巨頭の
りゅうけんさんや、
迫さんも元はエンジニアで
そこからマーケターに転身した人たち。

真似をすれば同じ結果が出せるとは言いませんが
キャリアを参考にすれば
確実に今よりも稼げるようになります。

そのスタートラインに
エンジニアの皆さんは既に立っている。"
他の選択肢のデメリットを伝える,"マーケターをおすすめしてますが
いきなり一本化するのはNG。

マーケターは良くも悪くも成果主義

初心者で実力がない間は
むしろ収入が下がる可能性が高い。

逆にエンジニアは爆発力はないが
安定して月60は稼げるので

まずは本業で安定収入を得つつ
副業でマーケの仕事をして実力をつけてこう。"
他選択肢の上手くいかなかった事例を共有する,"フリーランスエンジニアだけで
収入アップを目指したときは

最初は月50万円とか稼げて
そこから約1年ぐらい経験数が増えて
次の案件で月70万円になった。

普通に考えたら1年で月プラス20万円ってすごいけど

マーケ学んだ同期は月収300万とかになって
僕の一年の成長を一瞬で越えられた、、"
個人は攻撃せず概念を攻撃する,"エンジニアって稼げるスキルですが
実際のところは時給の高い末端作業者です。

時給労働に囚われている限りは
収入には限界があるので

商流を上げるためにマーケターになりましょう。"
一般常識に対して新たな視点を付与する,"どれだけ理不尽なことがあっても
全て自分が悪いって思えるようになれば稼げます。

例えば、部下がミスしたとしても
「正しく指示できなかった俺が悪い」

仕事で配属ガチャに外れてしまったとしても
「こんなところでしか働けない自分が悪い」

こんな風に自責精神で考えて課題を見つていくことが大事"
小さな失敗談を共有する,"夜型なので朝起きれないです
大体昼ぐらいに起きるのですが

午前から予定がある時は
「明日9時に起きる、明日9時に起きる」って呪文を唱えながら寝ます。

呪文はたまにミスります。"
幸せの範囲が一般の人と同じであることを伝える,"貧乏な時は1食100円とかで生活してたけど
最近はいつでも外食できるようになりました。

いろんなご飯食べ歩きとかしてたけど
今は自分で作って誰かに食べてもらう方が幸せだったりします。"
挑戦したけど上手くいかなかった過去事例を共有,"色んなことに目移りしてしまう僕は

1人で

・プログラミング
・動画編集
・ブログ
・YouTube
・物販

に手を出して全部中途半端になりパンクしました。

物販とかなら
仕入れはしたけど出品する作業が忙しくて
赤字になったり笑

まずは１つを極めよう。"
大切にしている価値観の共有,"僕は「自分を成長させてくれた人は裏切らない」という信念を持っています。

よく、「その人の元で学び、用がなくなったら踏み台にして飛び立っていく」

みたいな人を見かけますが
そんな裏切り行為を繰り返してる人は
最終的に行くところがなくなります。"
悔しかった経験や体験を共有する,"22歳という若さでエンジニアで月60万円稼いだ時は
同年代で一番稼いでるんじゃね？ってぐらい調子に乗ってました。

しかし逃げ切りサロンのイベントに参加したら
同い年や、年下で月1000万稼いでる人がごろごろいて
自分の未熟さを痛感しました。

成長を止めてはいけない。"
誰かに負けて勝とうと決心したことを伝える,"当時、めちゃくちゃ技術力の高いCTOの先輩がいて
「あ、プログラミングでは一生勝てないわ」って挫折しました。

悔しくて、マーケティング×エンジニアスキルを学びまくった。
今では、そのCTOの先輩よりも稼げるように。
"
新しいことを学んでいる様子を伝える,"Lステップを勉強したら

・売れるLステップを作るためにライティングを学習
・Lステップに人を集めるために広告を学習

と、マーケターとして
売り上げを上げるために
必要なことを順番に学びました。

その結果巻き取れる仕事も増えたし
その分収入もアップしています。"
自分より上の人と会い続けている様子を発信する,"僕はいつもどれだけ居心地が悪くても
自分が一番格下の環境に飛び込みます。

月収が20万なら100万の人がいるところへ、
月収が100万になったら1000万の人が集まるところへ。

ストレスがない環境よりも
格上にボコボコに揉まれる環境の方が
圧倒的に成長が早いので
ぬるま湯に浸かってちゃダメ。"
リスクをとっている様子を発信する,"基本的に貯金はしなくて
ほとんど勉強にお金を使っています。

もし手元にお金がなくても
分割払いを使ってでも価値があるもには
お金を払います。

もちろんリスクはあることですが
勉強した結果、
将来の自分の時給は
今よりも確実に上がっているので

将来の自分に先にお金を払ってもらっています。"
小さな成果でも報告する,"エンジニアとしては
時給4000円ぐらいで仕事してたけど

初めてLステップの仕事をとった時は
時給1000円ぐらいの案件から始めました。

未経験の分野の仕事をする時は
まずは無料or低単価で受けて
実績を作ることに注力すべし。

『損して得取れ』"
数字や肩書きを活用する,"未経験からプログラミングを始めたから

20歳で月収12万
21歳で月収20万
22歳で月収50万

マーケ学んで

23歳で月収130万

というペースで収入を伸ばしてきました。やはりマーケ学んでからの方が収入の上げ幅が大きい。"
顧客からの声を見込み客に届ける,"僕がエンジニア向けに開催している
マーケ勉強会は

エンジニアだからこそ理解できる具体例を使って話してくれるから分かりやすいと受講生から大好評です。

自分自身がエンジニアからマーケターになったからこそ
みんなが悩みがちな部分を具体化して説明できています。"
周りと違うということを伝える,"大体のエンジニアは技術を極めることがメインになっているなか
マーケティングスキルを身につけ
開発、マーケ両方統括できるようになり市場価値が爆上がりしました。"
言ったことを確実に達成する,"フリーターから3ヶ月で
月収30万にまでぶち上げた元同級生がいるのですが

今のペースなら来年中には月100万円ぐらいまで伸ばせるんじゃないかなって思っています。

単純に言ったことをちゃんとやってくれるので結果が出て当然です。"
エンジニアを教育する歌めのポストを作ってください,"
フリーランスエンジニアの収入源しかない時は

『労働を辞めた瞬間収入が0になる』

こんな不安が常にありました。

マーケティングを勉強して
労働依存じゃない収入源を手に入れてからは
最悪1ヶ月働かなくて良いって思うと安心できるし
新しいことに挑戦する気力にもなってます。"
エンジニアを教育する歌めのポストを作ってください,"夜型なんで
朝5時ぐらいまで仕事して
昼ぐらいに起きるみたいな生活しているのですが

これが一番しっくりきてて生産性高い。

これは会社員的な働き方をしてれば
この生活を実現するのはむずくて

マーケティングを勉強して
エージェントを通さず
個人で案件を取れるようになったら実現できたことです。"
エンジニアを教育する歌めのポストを作ってください,"マーケ学んで
個人で案件取れるようになってからは
自分でやりたい仕事を選べるようになった。

その結果自分の意思で

・この人と仕事したい
・この人とは仕事したくない

が選択できる自由が手に入りました。

結局、仕事の悩みの９割は
人間関係が原因なので
９割の悩みが排除されたのは大きいです"
エンジニアを教育する歌めのポストを作ってください,"手取り月12万円の会社員の頃は
・家賃3万円のボロアパートで
・一食100円台で食事代を抑える
・毎月赤字ギリギリ

こんな生活だった。

あれから2年、
今、月100万稼げるようになってからは
・家賃10万円の家で
・食べたい飯を食べれて
・お金を気にせず生活

マーケを学んだおかげです"
エンジニアを教育する歌めのポストを作ってください,"エージェント経由での案件だと
よくも悪くも会社員的なので
時間の縛りが多い働き方になります。

僕の場合、マーケティングスキルを掛け合わせて
市場価値を最大化したことによって
完全に個人で案件を受注してます。

成果主義なので
いつ仕事しても大丈夫。

時間の縛りがない働き方をしています。"
エンジニアを教育する歌めのポストを作ってください,"マーケティングの仕事って
クライアントさんと伴走しながら
一緒に売り上げを作っていくものなので

ただものを作るよりも、
ダイレクトにクライアントさんからの
感謝に繋がるので良好な人間関係が構築されます。

その分、報酬にも繋がるので
めっちゃやりがいがあります"
エンジニアを教育する歌めのポストを作ってください,"昔は毎月貯金が赤字になるギリギリだった。

月末支払いの時に
１円単位でお金が足りるか計算したり

たった数千円節約するために
夜行バスでお尻が痛い思いをしながら移動したり、、

稼げるようになってからは
お金を気にせず生活できたり
気軽に新幹線や、飛行機に乗れるようになりました。"
エンジニアを教育する歌めのポストを作ってください,"✅マーケティングを勉強する前

エンジニアで月150時間働いて
月収60万円

✅マーケティングを勉強した後

レベシェア報酬の案件で月15時間働いて
月収60万円

単純に時給10倍になった。"
エンジニアを教育する歌めのポストを作ってください,"会社員の頃は
強制的に配属された部署で
合わない人たちと仕事をすることに
胃が荒れるぐらいストレスでした。

プログラミングと
マーケティングのスキルを身につけた今は
自分の意思で
仕事や働く人を選べるので
余計なことに悩まなくて良くなりました。"
エンジニアを教育する歌めのポストを作ってください,"昔は一食100円に抑えないといけないぐらい
お金がなかったが

今ではお金を気にせず
食事ができるので

最近では
美味しいお店を食べあるくのが
趣味になってたりします。

地味ですが幸福度めっちゃ高いです。"
エンジニアを教育する歌めのポストを作ってください,"平日の昼間から旅行に行って
移動時間の間に仕事終わらせて
あとは遊ぶ。

みたいな生活ができるのも
完全成果報酬の働き方だから実現できてます"
エンジニアを教育する歌めのポストを作ってください,"マーケターになって
商流が上がったことで
発注する側の立場になって

一緒に働きたい人をある程度選べるようになった。

優秀な人と仕事すると自分も勉強になるから成長にも繋がって良い循環です。"
エンジニアを教育する歌めのポストを作ってください,"お金を稼げるようになると
『お金を理由に行動しない』ってことがなくなるので

稼いで、新たなチャンスにお金を使って

さらに稼いでっていう永久機関が出来上がります。"
エンジニアを教育する歌めのポストを作ってください,"夜に飲みすぎると次の日昼まで寝てしまう。

冷静に考えて時間決まってる案件でこれやると普通にクビなんで成果報酬型のマーケの仕事しててよかったなと思う"
エンジニアを教育する歌めのポストを作ってください,"会社員の頃は、年功序列ってだけで上司や先輩が高圧的にくるって感じの世界でしたらが

その会社を辞め、スキルを身につけた今はその上司たちより収入が倍以上になりました。

若いなんて関係なくしっかり学び続ける人が勝ちます"
エンジニアを教育する歌めのポストを作ってください,"今でこそ月収200万円とかになってお金には困らなくなりましたが

昔は月収12万円で
・家賃3万円のボロアパートで生活
・一食100円台で食事代を抑える
・趣味や遊びにお金を使う余裕はゼロ

みたいな感じでした。

今思うとよく生きてこれたなと思います。"
エンジニアを教育する歌めのポストを作ってください,"今はいつ、どこで働いてもいいって状態なので

大阪に住んでいますが気まぐれで１週間東京に行ったり福岡に行ったりします。

会いたい人に会いたい時にあえて
行きたいとこに行きたい時に行ける生活になったのが

マーケタになって一番でかいです。"
エンジニアを教育する歌めのポストを作ってください,"月収が60万円から200万円ぐらいになって起きた変化は

Uber使う時に一食1000円台以内に抑えてたところを2000円代にしても気にならなくなったこと。

予算を2000円代にするだけで結構頼めるものの幅が広がります。

ちなみに月収12万円の時は1食100円代に抑えてました。"
エンジニアを教育する歌めのポストを作ってください,"完全フリーになっていつどこにいても良いってなると例えば渋谷でめっちゃ並んでる店とか平日の昼間っから行けたりするので並ばなくても良くなります。

こんな感じで時間がある人はより時間ができるっていう状態になります。"
エンジニアを教育する歌めのポストを作ってください,"自分がよく絡む5人の平均が自分の収入になると言われています。

月収12万円ぐらいの頃は会社員や全然向上心に囲まれてて自分の成長も止まってた気がしますが

月収200万円になった今では向上心があって稼いでる人しか周りにもいないです。

まずは環境を変えることが収入アップに直結します。"
エンジニアを教育する歌めのポストを作ってください,"月収100万円ぐらいになると
数千円の出費は気にならなくなります。

大きな変化で言うと
ちょっとした移動は電話からタクシーに
遠方への移動は夜行バスから新幹線に

移動手段が変わるだけで結構QOL上がってます。"
エンジニアを教育する歌めのポストを作ってください,"最近、家事代行をお願いしてみたのですがマジで感動！

自分がのんびり作業してる間にどんどん家が綺麗になっていく！

でも僕はすぐ家を汚すので定期的にお願いしないと綺麗さを保てません🥺"
エンジニアを教育する歌めのポストを作ってください,"最近僕の周りには会社を経営してるのは当たり前の稼いでる人ばっかりです。

なぜそんな状態になれたかというと自分自身も月２００万円ぐらいには稼げるようになったから。

周りのレベルを上げる近道は自分のレベルを上げることです。"
エンジニアを教育する歌めのポストを作ってください,"今手持ちの案件は全て
個人でとっており

✅フルリモートでどこで仕事してもOK
✅期限さえ守ればいつ仕事してもOK

そんな生活を実現しています。

昔、片道2時間かけて
毎日会社に出勤していた頃を考えると
想像もできなかった。"
エンジニアを教育する歌めのポストを作ってください,"月収100万円って
一部の天才しかいけないと思われがちですが

✅フリーランスエンジニア開発案件で60万円
✅副業のマーケ系案件で40万円

取れば良いだけです。

フリーランスエンジニア、
マーケターとしても

普通に誰でもいけるレベル感なので
意外と簡単です。"
エンジニアを教育する歌めのポストを作ってください,"未経験からでも
プログラミングを勉強したら
2年で月60万まで稼げるようになったし

そこからマーケティングを勉強したら
半年で月120万稼げるようになった。

ぶっちゃけ月100万円ぐらいまでは
ただ愚直に学んで行動するだけでいけます。"
エンジニアを教育する歌めのポストを作ってください,"僕は高卒で、しかも高校の偏差値が40台、新卒の手取り収入で月12万円という
誰が見ても落ちこぼれ

そんなやつでも
プログラミング、マーケ勉強して
月100万稼げました。

過去の学歴とか関係ない、
今からどれだけ努力するかで人生変えれます。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアから
マーケターになるためには

マーケの仕事一本にするみたいなことをしなくても
開発の案件をこなしながら
副業として少しずつマーケターの仕事をしつつ
ちょっとずつ移行していけば大丈夫です。

まずは副業マーケターとして
本業と同じぐらい稼ぐことを目標にしましょう。"
エンジニアを教育する歌めのポストを作ってください,"マーケティングがわかると
物を売るだけでなく

恋愛や、日常生活など
様々な場面でありがちな
壁を攻略できるので

全人類マーケティングを勉強するべきです。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアから
マーケターになるということは
未知の領域だと思われがちですが

マーケターにとって必要な

・論理的な思考力
・データを見る習慣
・テストして検証する力

これが既に身に付いているので

普通の人よりも
スタートダッシュを切った状態で
目指すことができます。"
エンジニアを教育する歌めのポストを作ってください,"マーケターとして案件を取るのって

①DRMや、Lステップを学ぶ
②オンラインサロンのオフ会に行く
③そこであった人に無料でやるので
売れたら◯％くださいと提案

本当にこれだけ。

結局みんな学ばないし、
行動しないから結果が出ないだけなので

ちょっと行動するだけで結果が出ます。"
エンジニアを教育する歌めのポストを作ってください,"僕は
・勉強せず適当に選んだ高校に行って
・何も考えず適当に会社に就職して
・会社をやめてフリーターとして手取り12万の極貧生活を送る

誰が見てもクズ見たいな人生でした。

そんな人でも本気で人生変えようって思って
勉強と行動を繰り返してたら

月収１００万超えたので
才能なんて関係ないです"
エンジニアを教育する歌めのポストを作ってください,"エンジニアであれば
・論理的思考力や
・仮説検証する力が既に身に付いているので

マーケティングの理解が鬼早いです。

結局プログラミングと同じで
実際に手を動かしてみて
その結果どうなったか？を試していく
みたいな感じなので思ったほど未知の領域ではないですよ。"
エンジニアを教育する歌めのポストを作ってください,"僕は『働きたくないから今死ぬほど働いて稼ぐ』を夢に生きていました。

ですが最近はどちらかと言うと頑張ったらその分収入が上がっていくのが楽しくなってきたので純粋に働くこと自体が好きになりました。

後から考えなんていくらでも変わるのでまずは死ぬほど働いてみる経験は大事です。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアの
緻密な設計力、テスト力は
マーケティング業務でも
めっちゃ役に立ちます。

感覚ではなく、
論理的に組み立て

そしてそれをしっかり実行、確認する能力がピカイチです。

#エンジニアマーケター"
エンジニアを教育する歌めのポストを作ってください,"日本人の大人のうち仕事以外で1日に勉強する時間の平均は5分だそう。

上振れ、下振れあるから実際はほとんどが0。

みんな大人になると勉強しなくなるんです、だからこそちょっと勉強するだけで勝てます。"
エンジニアを教育する歌めのポストを作ってください,"月収5万のフリーターの友達に
プログラミング、
Lステップを教えたら

たったの3ヶ月で
クライアントワークで
月収30万円稼げるように。

プログラミングだけなら
そんな短期間で
30万円代を稼ぐのは難しいが

プログラミング×マーケティングを
掛け合わせることで
最速で結果が出せました。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアは

✅要件定義

✅物事を論理的に組み立てて設計

✅バグがないよう入念にチェック

これを日常からやってるので

Lステップ構築をお願いした時の
正確性がバカ高いです。"
エンジニアを教育する歌めのポストを作ってください,"マーケティングやライティングを身につけたおかげで普段生きてるだけで色んな施策を仕掛けられてることに気づけるので、本当に必要と思った時だけ物を買ったりできます。

"
エンジニアを教育する歌めのポストを作ってください,"エンジニアでもマーケティングでもまずは案件一つ取ったらそのクライアントさんに死ぬ気でにコミットする。

たったこれだけでOK。

そうすれば自然と紹介にも繋がって、さらにその先でコミットして紹介もらってって感じで永久機関が完成します。"
エンジニアを教育する歌めのポストを作ってください,"フリーエンジニアになって月60万円ぐらい稼ぐと大体みんなそれ以上成長しなくなるので、新しいことを始めるだけで簡単に追い抜くことができます。

エンジニアの次はマーケターを目指すのがおすすめです。

どうすればマーケターになれるかは僕のツイートを毎日見ればOK！"
エンジニアを教育する歌めのポストを作ってください,"今では月収150万円とかで
そこそこ成功した方の僕でも

・家賃3万円のボロアパート
・一食100円台で食事代を抑える
・毎月借金の返済＋生活費用で赤字
・早期退職して家族からは人生詰んだ奴認定される

みたいなそこそこオワコン状態で。

悔しい思いをバネにスキルを身につけ人生変わりました。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアがマーケできると
作業してる中でめんどくさい作業をサクッと自動化してるだけで、クライアントさんにとっては革命だったりする。

難しい技術を使えるよりも、どんな物が求められてるか？

ここの理解があるだけで無双できます。"
エンジニアを教育する歌めのポストを作ってください,"【マーケターとして案件を取る方法】

①DRMや、Lステップを学ぶ
②オンラインサロンのオフ会に行く
③そこであった人に無料でやるので
売れたら◯％くださいと提案
④案件に繋がれば全力でコミット

この流れなら、
クライアントにとってもリスクがないので
再現性高く案件を取ることができます。"
エンジニアを教育する歌めのポストを作ってください,"会社員の頃
自分にはちょっとレベルの高い
仕事の募集があった時

勇気が出せず手をあげることができませんでした。

結果的にその仕事を受けた人は
年収ベースで200万以上アップする
仕事を任されました。

それが悔しくて
今では自分にとって少し難しいことでも
積極的に手を挙げるようにしています。"
エンジニアを教育する歌めのポストを作ってください,"僕はみんなが行動するから
行動するではなく、

みんなが行動しない時こそ一番行動します。

例えばサロンのオフ会なら
みんなが来るより１時間前に行くなど。

そのほうがやっぱり印象に残るので
逆張りの行動力を大切にしています。"
エンジニアを教育する歌めのポストを作ってください,"今、安定したスキルを持っていても

トレンドも移り変わりも早く
円安で今持っているお金の価値が減って行く
この日本において

現状維持をすると言うことは
常に収入が一気に０になるリスクを抱えています。

新しいスキルを身につけて
収入を上げて初めてトントンだと思っています。"
エンジニアを教育する歌めのポストを作ってください,"僕は初めてオフラインのイベントに
参加した時って
当日『今日行くの辞めようかなってぐらい』緊張してました。

ですがいざ、参加してみたら
みんな初めての自分を温かく受け入れてくれるのでそんなにビビらなくてよかったりします。"
エンジニアを教育する歌めのポストを作ってください,"僕は先輩経営者に誘われたら
飲み会のためだけに
大阪から、名古屋や東京まで
速攻で飛んで行ったりします。

そうすると話題にもされますし、
わざわざ来てくれたってことで
かわいがってくれたりもするので

若いうちはふっ軽さという武器を持っているので
使えるうちに使っておきましょう。"
エンジニアを教育する歌めのポストを作ってください,"マーケを勉強する時に
・値段が高い講座
・それよりも安い講座

があった時に僕は安い方の
講座を購入。

しかし、あまり質が良くなく
逆に高い方の講座を買ったライバルは
みるみる収入を上げていきました。

高い物が良いとは言いませんが
高くても質がいい物を買った方が
結果的に得することを実感
"
エンジニアを教育する歌めのポストを作ってください,"100万円を貯金していても
そのお金は100万円以上の価値にはならないし
むしろ下がる可能性すらある。

それよりもその100万円を使って勉強に使えば

100万円なんて
たったの1ヶ月で稼げてしまうから
いかに貯金が死金になっているかがわかりますよね。"
エンジニアを教育する歌めのポストを作ってください,"『なんでそんなに勉強にお金を使えるんですか？』と良く聞かれるのですが

その理由はとてもシンプルで
「お金を払えば、お金が増える」からです。

例えば、プログラミングスクールに
50万円払って、毎月70万円稼げる
エンジニアになれるのですから
普通に考えたらお金払いますよね。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアの知り合いだと
年商2000万ぐらいが天井ですが

周りのマーケターたちは
年商1億以上とか当たり前にいます。

それくらいマーケティングスキルには可能性があります。

どちらを勉強すれば良いかは一目瞭然ですね。"
エンジニアを教育する歌めのポストを作ってください,"お金を使って
・イベントに参加して人脈を増やす
・しっかりと格上から学ぶ

これができるだけで
同じ20代と大幅に差別化できます。

みんな参加しないし、学ばない
だからこそ勝つのは余裕です。"
エンジニアを教育する歌めのポストを作ってください,"【あなたの仕事積み上がってます？】

ぶっちゃけ
月100万稼ごうと思ったら

フリーエンジニアなら
案件「2個掛け持ち」するだけで速攻行く。

しかしそれではあくまで

「時間を切り売り」

してるだけ、そこが頭打ちです。

もし今以上に
少量かつ、高収入を目指すなら

資産性のある仕事をすべき。"
エンジニアを教育する歌めのポストを作ってください,"マーケターの案件を取るためにやったことは

・オンラインサロンのイベントにいく
・運営の手伝いをして関係をよくする
・これを2、3回繰り返す
・「今Lステップ勉強してます」と言う

たったのこれだけ。

誰でも再現性高くできるノウハウなので
騙されたと思ってやってみてください。"
エンジニアを教育する歌めのポストを作ってください,"マーケティングの仕事って
難しく聞こえますが

①人を集める
②商品の魅力を伝える
③買ってもらうために営業する
④価値のあるサービスを届ける

たったのこれだけです！

あとは①〜④の各業務を
どんな手段を使って実施するのかを
勉強すればOK👍"
エンジニアを教育する歌めのポストを作ってください,"エンジニアのコミニティで
プログラミングができても
別に重宝されないけど

マーケターのコミニティーで
プログラミングができると
神様扱いされます

逆もまた同様。

スキルを身につけたら
あえて、軸が違うコミニティに入るのおすすめです。案件無双できます。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアからマーケに興味を持つほどの
情報感度がある方はとても優秀

だからエンジニアで停滞するのは
非常にもったいないです。

ポテンシャルがあって
マーケティングを学べば
もっと稼げるのでぜひ勉強してください。

具体的な方法はこちらでお伝えしてます。

👇👇👇

lin.ee/4SY1bfI"
エンジニアを教育する歌めのポストを作ってください,"学生時代、意味があるのか分からない勉強が大嫌いでろくに努力をしてこなかった僕ですが

今ではプログラミングや、
マーケティングなど自分の成長に繋がることはなんでも勉強するようになりました。

昔、勉強が苦手だったって人も
意味を見つけれなかっただけ、

本当はやればできます！"
エンジニアを教育する歌めのポストを作ってください,"プログラミングでツールや、サービスを作れるって
エンジニア以外の人にはできないことなので
それだけでも十分すごいです。

ですがもっと言うなら
サービスを売るための
マーケティング力も身につければ

「作って、売れる」

最強人材になれるので
市場価値爆上がりです！"
エンジニアを教育する歌めのポストを作ってください,"僕が尊敬するCTOの人でも
コードが書けなくてつまずく時期があったそうです。

今、年商億越えの経営者たちも
元々は一円も稼げず悩んでる時期がありました。

今結果が出てる人は
学び、成長していったので
皆さんにも必ずできます！"
エンジニアを教育する歌めのポストを作ってください,"【労働ではいつまでも不安定】

フリーランスエンジニアしか収入源がない時は

『労働を辞めた瞬間収入が0になる』

こんな不安が常にあった。

マーケティングを勉強して
労働依存じゃない収入源を手に入れてからは
最悪1ヶ月働かなくて良いって思うと安心できるし
新しいことに挑戦する気力にもなる"
エンジニアを教育する歌めのポストを作ってください,"プログラミングを
独学で勉強しようとした結果

・一個のスペルミスで3日潰したり
・環境構築ができず、
プログラミングに一切触れずに挫折する
なんてことがありました。

天才じゃない人は
素直に結果出してる人から学びましょう。

それが唯一天才に近づける方法です。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアは高い技術力で
がっつりサービス作れる
ことも大事ですが

できなかった事をを可能にしてあげたり、

なんなら手動でやってたことを
パパッと自動化したりと、
簡単なプログラム書くだけで感謝されます。

戦う場所次第で
市場価値爆上がりです。"
エンジニアを教育する歌めのポストを作ってください,"『やらないを解決するのは
教育業として一番価値がある』

マジでこれを最近痛感

僕も忙しい時ほど
SNSなどの自分のための
事業を後回しにしがちなので

こう言う強制的に作業させる環境って
本当に大事です。

自分という人間は対して強くないです。"
エンジニアを教育する歌めのポストを作ってください,"お金にはそれなりに困らなくなりましたが
口座登録の手続きがめんどくさくて毎月の支払い系忘れがちなので
3ヶ月に1回ぐらい水が止まります。"
エンジニアを教育する歌めのポストを作ってください,"この歳で月100万円稼いでると
遠い存在だと思われますが

普通に友達と飲みに行ったり、
女の子が好きで精神的には一般的な24歳です笑

なんでオフ会とかで出会ったら
普通に接してくれるとありがたいです🥺"
エンジニアを教育する歌めのポストを作ってください,"エンジニアで月収200万を
目指そうと思ったけど

それが達成できてるのは

・個人開発でサービス作ってるか
・エンジニアチーム抱えてガンガン案件回してるか

のどっちかだった。

正直、僕にそれができると思わなかったので
マーケティングを勉強することにしました。"
エンジニアを教育する歌めのポストを作ってください,"僕は後輩や、仕事をお願いする人に対しては
致命的なミスをしたとしても必ずワンチャンスあげるようにしています。

ちゃんと素直にぶつかってきてくれる人なら僕は徹底的に応援します。

逆に去っていく人、義理がない人は知りません。"
エンジニアを教育する歌めのポストを作ってください,"僕がプログラミングスキルを極めず、
マーケティングを勉強しようと思った時は
「あいつは才能がないから逃げた」とか言われて
とても悔しかった。

しかし絶対にマーケの方が
将来に直結すると思ったので
なんと言われようと頑張りました。

その結果当時の同僚や、上司より今では稼げています"
エンジニアを教育する歌めのポストを作ってください,"「月100万稼ぎました！」って喜んでいる間に

同い年で月に2000万、1億と稼いでる人がごろごろ現れました。

その人たちに並ぶために
同い年だからって嫉妬せず
その人たちのコンテンツも買うし
愚直に学びます。

頑張るやで"
エンジニアを教育する歌めのポストを作ってください,"「Lステップや、ライティングを勉強して
いいアカウントを作りました！」

でもどうやってそのアカウントを
みんなに見てもらうんですか？

ってところで詰まってる人が多いです。
僕もその1人でした。

マーケティングに大事な集客が抜け落ちてしまっている
Lステッパーが多いので広告を勉強しました。"
エンジニアを教育する歌めのポストを作ってください,"若い人がすべきことは
年上の人たちにボコボコにしてもらうことです。

自分より修羅場をくぐってきた
年上の人たちに自分のダメなとこ
全部指摘してもらって改善していく。

確かに自分のことを
否定された気持ちになったりしますが
みんな愛情を持って成長に繋がるようしばいてくれます。"
エンジニアを教育する歌めのポストを作ってください,"マーケティングを勉強して
月収100万円稼げるようになりましたが
今年はさらに300万円勉強にブッパしました。
赤字ギリギリまで、自己投資に使ってる感じです。

その結果3ヶ月で150万まで稼げるようになってきたので
やっぱり自己投資は間違いないです。"
エンジニアを教育する歌めのポストを作ってください,"未経験からエンジニアになった時
給料手取り12万円だった。

それだけでみたら
全く稼げてないけど

これから大きく稼げるエンジニアへの最初の0→1を達成したと考えると
小さな一歩に見えて
めちゃくちゃ大きな一歩でした

皆さんも0→1突破したら
どんな小さな成果でも自分を褒めてあげてください！"
エンジニアを教育する歌めのポストを作ってください,"年収1000万円超えてるのって
日本の上位5%、

その中でも20代で年収1000万円超えているのは日本の上位0.4%らしい。

高卒、学歴なしという天才じゃない僕でも愚直に結果出してる人から学んで来たからこそ達成できた。

20代ならただ勉強するだけで
上位0.4%に入れるって夢すぎる。
"
エンジニアを教育する歌めのポストを作ってください,"僕がエンジニア向けに開催している
マーケ勉強会は

エンジニアだからこそ理解できる具体例を使って話してくれるから分かりやすいと受講生から大好評です。

自分自身がエンジニアからマーケターになったからこそ
みんなが悩みがちな部分を具体化して説明できています。"
エンジニアを教育する歌めのポストを作ってください,"フリーランスって何かやらかしていても
指摘されず、そのままクビを切られるみたいなことが良くありますが

僕の場合は、ダメがあったら
ちゃんと怒ってその人の成長に繋げたいと思ってます。

でもそれが怖いって言われたりもする。

本当に怖いのは何も言われないままクビを切られることですよ。"
エンジニアを教育する歌めのポストを作ってください,"僕のTwitterは
会社員、フリーランスエンジニアで収入に天井を感じてる人に

『マーケ』を教えて限界突破してもらうため発信してます。

コンテンツ売って一過性で稼ぐのではなくクライアントワークで堅実に稼げる人材を育てます。

質問はこちらで受け付けてるのでどうぞ👇

https://lin.ee/4SY1bfI"
エンジニアを教育する歌めのポストを作ってください,"ラインコピーを勉強すると
マッチングアプリのメッセージの
1行目とかめっちゃこだわります。


ラインで反応が取れる文章を書くのと同じように


どんなメッセージが女性からの返信率が高いかとか研究したりする😇"
エンジニアを教育する歌めのポストを作ってください,"ツイートを作るときは
過去と現在で時系列ごとに細分化して

その時系列ごとに当時、自分が悩んでいたことを100個ぐらい洗い出して
それを解決することを書けば自然と有益なツイートができます！

まずは分解して、洗い出していくの大事。"
エンジニアを教育する歌めのポストを作ってください,"【効率的にタスクを消化する方法】

①MTGなどでやることが決まる
②タスクができた直後、記憶が新しい間に大枠の部分だけ先に終わらせる。
③残りの細かいのは納期の3日前ぐらいに一気に処理。

これだけで劇的に変わる。

結局一番無駄なのは、タスクの詳細を思い出す時間。"
エンジニアを教育する歌めのポストを作ってください,"マーケタになるために勉強すべきこと

①DRM
②Lステップ
③ライティング
④広告 or SNSスキル

ここまでできれば
1人でビジネス作れることができます"
エンジニアを教育する歌めのポストを作ってください,"悪いことは言わない

とりあえずオンラインサロンに入ったらオフ会にいきなさい。

一回じゃなくて、何回も、全部のイベントに参加する勢いで。

そしたら稼げるようになるから。"
エンジニアを教育する歌めのポストを作ってください,"【質問の使い分け】

よく具体的に質問しないと
絶対ダメと思われてるが
結論ちゃんと使い分けるのが大事。

具体的なこと聞きたいなら
具体的に質問しないといけない。

逆に自分の発想とは全く違う方向性の答えを知りたかったらあえて抽象的な質問をするのが効果的。"
エンジニアを教育する歌めのポストを作ってください,"マーケティングを理解するためには

✅売り上げの公式
売り上げ = 集客数×CVR×単価×平均リピート率

✅マーケの流れ
集客、教育、販売、アフターフォロー

まずはこの2つを必ず抑えましょう。

マーケやってる人これを知ってる前提で話が進むほど必須の知識です。"
エンジニアを教育する歌めのポストを作ってください,"エンジニアがありがちなミスは機能の優秀性を伝えてしまうところ。

しかし、お客さんは機能ではなくその機能を使った先にあるベネフィットの部分に魅力を感じてサービスだったり、商品を買う。

ここの違いがわかるだけでも求められるエンジニアになれます。"
プログラミング勉強しても収入は上がりません,"タイトル&問題提起
プログラミングを勉強しても収入は上がりません！

問題の深掘りと煽り
みんな 単価を上げたいと思ったらプログラミングのスキルを増やそうするじゃないですか？ これほんまにみん勘違いしてる

僕自身は
フリーランスなって1年ごとに
70万、100万、130万と単価を上げてきたけど
正直言語の勉強なんかほとんどしてない。

(共感)

確かに世の中のエンジニアはプログラミング勉強しろって言うからそれに影響されてしまうのはわかるけど言うて単価5万、10万ぐらいしか上がってなくない？

いきなり単価30万上がりましたとかってあんまないよね。


別に技術が大好きででエンジニアやってる人はそれでいいと思うけど、

収入上げたくてエンジニアなったタイプは
多分そんな技術好きじゃないよね？



インサイト深堀り

このままフリーランスエンジニアの働き方続けても

言うてプログラミング”だけ”で稼ごうと思ってもせいぜい月80万円ぐらいが天井やから
もっと違うスキルを身につける必要はあります。


実際僕が一気に単価130万まで上がった理由は

開発スキルだけじゃなくて
マーケティングスキル身につけて
お客さんの売り上げやコストカットを
目的に開発ができるようになったからです。"
認識合わせの提案を部下からやると評価上がるって話,"インスタ台本テンプレ

ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

認識合わせの提案ちゃんと自分からやってますか？

# 問題提起

若手のエンジニアの中で
先輩エンジニアから
タスク説明とか認識合わせをしましょうって
言われないと会話しない人ってたまにいるんですが

指示待ち人間は先輩評価めっちゃ下がります。


確かにまだ現場に慣れてないし
下手なこと言ったら怒られないか不安やから
待ちになるのも分かるんやけど



逆にみんな指示待ちになりがちやからこそ

自分からタスクくださいって言いに行ったり
ここの部分認識合わせておきたいので
15分時間もらえませんか？

ってちゃんとコミニケーション取りに行くだけで
先輩評価はめっちゃ上がりますよ。


開発現場においては
自分の直属の先輩に評価して貰えると
それがPMなどの上の人に話伝わるから

自然と案件の継続も貰いやすくなるから
積極的にコミニケーション取りに行こ



# 問題拡張

# 解決策

# CTA"
開発AIが進化して一番被害受けるのが単価高いエンジニアです,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

開発AIが進化して一番困るのは
単価が高い2,3年目のエンジニアです

# 問題提起

最近、毎週のように開発AIが進化してて
先月やばいって思ってたサービスでも

今日発表された
このサービスの方がいいやんってなって
代謝が早いです。

あ、もうcursorは解約しました。

# 問題拡張

特にAIによって
効率化されてるのって決められた仕様や設計通りに
開発をするって言う実装作業ですよね。

今まではこの実装作業が
難しかったし、大きいサービス作るためには
たくさんエンジニアが必要だったので

実装ポジションのエンジニアでも
単価高かったです。

しかしだんだんとそっちに高単価払うよりも

レイヤーが高い
ベテランエンジニアの単価を高くして
AI使って開発してもらった方が
企業としてはコスパがいい事に気づき始めてます。

実際僕が参画してる案件でも
昨年までは人が足りないから
月単価70万ぐらいで
エンジニア新しく採用しようかなと思ってましたが
AIのおかげで必要無くなりました。

# 解決策

いま単価60万円以上のエンジニアは
実装作業に価値は無くなっていくので

コーディング以外の付加価値をつけないと
必然的に単価は下がります。

どんな経験が必要なのかお伝えしておくと
これから開発する機能を誰に使ってもらって
どうやって売り上げを立てていくかを考える
マーケティングスキルです。

売り上げ作れないエンジニアに
価値は無くなっていくから
絶対に覚えといてください。

# CTA"
エラーが絶対解決できる方法教えます,"# タイトルコール

プログラミングのエラー
絶対に解決できる方法教えます！

# 問題拡張

エラー解決の時は
めっちゃ大事な考え方があって

最初はエラー箇所周りを探すのはもちろんやねんけど
15分探して解決できなかった時は

一回全体の視点で見ないと
原因じゃないところを一生探すことになるよ。


例えばフロントでundefinedエラーが出て、
ひたすらフロントのコードを探したけど、
実はDBに該当データがなかっただけ
みたいな事ってちょくちょくない？


# 解決策

僕がやってるデバッグの考え方をお伝えすると

今作ってる機能をまず
フロント→バッグ→DBと広い視点で
データがどこまで疎通できてるのかを
まず確認する様にしてください。


例えばさっきのundefinedのエラーやったら

VSコードのデバッガーや
console.logでログ出して

・まずフロントからバックにちゃんと疎通できているかを確認する
・次にバックからDBにちゃんと繋がってるか確認する
・DBにちゃんとデータがあるか確認する

みたいな感じで全体像を見てください。

そしたらフロントでバグ起きてたけど
そもそもの原因はDBにデータがなかったとか
データはあったけどサーバーのこの関数のところで
加工処理ミスってたとか

根本原因がわかります。


エラーがなかなか解決できな時ほど
どんどん視点が狭くなっちゃうから

そんな時ほど落ち着いて
全体像をみる様に意識してみて

絶対バグ解決できるから。"
進捗報告の時に今やってる事だけを報告されるとPM側はイラっとします,"今やってる事だけ言ってなんか進めてる感出したくなるのはわかるけど

今手持ちのタスクのうち
今これをやってて

これはいつまでに終わりますっていう
全体を聞いてます


# タイトルコール

タスク進捗を報告する時、今やってることだけを報告してませんか？
それめっちゃイラっとされてますよ。

# 問題提起

例えば機能開発のタスクの進捗共有する時に

・新規登録機能の実装を進めてますとか
・一覧取得の実装を進めてます

みたいに
今やってる部分だけ報告されると
結構困ることが多くて

先輩エンジニアが報告の時に知りたいのって
今何をやってるかももちろんやけど

あとタスク何が残ってて
それら含めていつまでに終わらせる予定なのか？

って言う
進めれてないタスクについて
ちゃんと把握しときたいんよね。

# 問題拡張

もし他のタスクが遅れそうなんやったら
違う人にアサインするとか考えれるのに

そこを報告せずに曖昧にされると
マネジメントする側としては
めーっちゃイラってする。


もうほっといてもタスク進めてくれるわってぐらい
信用できるエンジニアならいちいち細かいことは気にせんけど

むしろ自走できないエンジニアほど
報告の仕方をミスってる。


先輩が安心する進捗報告の仕方教えてとくと

・今進めてるタスクと
それがいつまでに終わる予定なのか

それと
・進めれていないタスクが今どれだけあって
それらはいつまでに終わらせる計画なのか

これをセットで報告してあげて


# 解決策

# CTA"
進捗報告上手くいってる時だけやってませんか？,"# タイトルコール

エンジニアは上手く言ってる時しか進捗報告しないやつ多すぎです

# 問題提起

これ仕事でも、講座で指導する時でも全部そうやねんけど
タスクの進捗いい時とか
なんか成果が出た時とか

いいことがあった時だけ
報告してくる人いて結構多いんやけど
このパターンは将来落ちやすい。

むしろ上手く言ってない時ほど早く報告すべき。

# 問題拡張

確かに上手くいってない時って
やっぱ自信を持って報告できないのもわかるんやけど

そうすると
より成果が出づらくなるし
成果が出ないからより報告できなくなるって言う
負のループに入るんよね。


指導する側としては
今上手く言ってないことを
ちゃんと報告してくれたら

仕事ならこれはこっちで巻き取ってリカバリーするとか
講座なら、そこで詰まってるんやったら次こういう提案の仕方すると通りやすいよ

とか
何かしら改善策を出してあげれるから
早くいって欲しいんよ。

報告せずに1人で悩んで勝手に自爆されると
お互い困るから

上手く言ってない時ほど報告する、
これ明日絶対からやってな


# 解決策


# CTA



マインドセットが
良い結果が出た時だけ報告するだと

よくない時ほどやる

負のループに入る"
ぶん投げるようなプルリク出してませんか？,"# タイトルコール

先輩にぶん投げるようなプルリク出してませんか？

# 問題提起

アサインされたタスクが終わって
やっとプルリク出して
あー終わったーってなった時に

先輩からめっちゃ指摘が入ったら
テンション下がるかもしれんけど

それ先輩側はもーっとテンション下がってます。

# 問題拡張

レビューで指摘をめっちゃ受けるエンジニアって
プルリクの出し方に問題があると思ってて

今回のタスクで書いたコードの
意図を説明せずに
とりあえずプルリクだけ作って

「レビューお願いします！」

みたいな感じで
ぶん投げるような出し方してない？


これって
先輩からしたらどんな意図で
書かれてるのかとかがわからんから

ローカルで動作確認する作業が増えたり
変更箇所から他に影響がないかチェックする手間が余計に増えたりと

めっちゃ負担になるんですよね。

# 解決策

だからこれからプルリクを出す時は
プルリクにこのファイルはこういう意図で書きました
ってコメント残したり

もし先輩の時間が取れるなら
15分だけレビューの時間くださいって言って

自分が書いたコードを
一通りどんな流れで実装したのか？を説明する習慣をつけると

自分のスキルも上がるから
自然と先輩からの指摘も減るし
信用が積み重なるから
よりレベルの高い仕事も任せてもらえるようになります。



# CTA"
AIにコード書かせたけどそれバグないかちゃんと自分で責任もてますか？,"# タイトルコール

AIに書かせたコードそのままプルリク出してないですか？

# 問題提起

最近はAI使って開発することが増えてきて
今までに比べたら格段に
開発スピード上がったと思うけど


ちゃんと書いてもらったらコードが
どんなロジックで動いてるのか？
ちゃんとバグがないものになってるか？

自分で理解してから
プルリク出してますか？

# 問題拡張

これレビューする側としては
コードを見た時に
あ、これAIに書かせたんやろなってのは正直わかります。

AIに書かせること自体は
全然いいし、効率も上がるから
どんどん活用して欲しいとは思いつつも

なんかバグがあった時に
このコードはどんな意図で動いてるのか？
って聞いて

答えれなかったらアウトやなって思います。

# 解決策

AIはあくまでコードを書くっていう作業の部分を
効率化するものであって

どんなコードを書くべきかとか
良し悪しを判断する
思考の部分もAIに丸投げすると

AI以下のエンジニアになってしまうから気をつけてください。


# CTA





ーーーー

AIにコード書かせたけど
そのコードがどう動いてるのか
仕組みをわからずにとりあえず書きましたって
出される

レビューする側としては
本人も悪いと思ってないし
もちろんAIが責任取るわけでもないので

行き場のない怒りを通り越して絶望します"
エラー解決できない時こんなやり方してないですか？,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識

非常識


# タイトルコール

フロントでundefinedエラーが出て、
ひたすらフロントのコードを探したけど、
実はDBに該当データがなかっただけ…なんてこと、
ありませんか？

# 問題拡張

エラー解決の時は
めっちゃ大事な考え方があって

最初はエラー箇所周りを探すのはもちろんやねんけど
15分探して解決できなかった時は

一回全体の視点で見ないと
原因じゃないところを一生探すことになるよ。

# 解決策

具体的に僕がやってる
デバッグの考え方をお伝えすると

今作ってる機能をまず
フロント→バッグ→DBと広い視点で
データがどこまで疎通できてるのかを
まず確認する様にしてください。


例えばさっきのundefinedのエラーやったら

VSコードのデバッガーや
console.logでログ出して

・まずフロントからバックにちゃんと疎通できているかを確認する
・次にバックからDBにちゃんと繋がってるか確認する
・DBにちゃんとデータがあるか確認する

みたいな感じで全体像を見てください。

そしたらフロントでバグ起きてたけど
そもそもの原因はDBにデータがなかったとか
データはあったけどサーバーのこの関数のところで
加工処理ミスってたとか

根本原因がわかります。


エラーがなかなか解決できな時ほど
どんどん視点が狭くなっちゃうから

そんな時ほど落ち着いて
全体像をみる様に意識してみて

絶対バグ解決できるから。



# CTA"
20代後半でリーダー経験がないエンジニアはやばいって話,"# タイトルコード

20代後半でリーダー経験がないエンジニアはやばいです。

# 問題提起

普通は社会人やってたら20代後半ぐらいには
勤続5年目ぐらいになって
何かしら部下や後輩を持って指導する
責任者やってるのが当たり前やけど

今エンジニアの人って意外と経験な
理由を説明すると

大体がの人が
新卒で22歳ぐらいに入社した会社で1、2年勤めたけど
何かしらの理由でエンジニアになることを決意して
転職したよね。

で、24歳ぐらいから会社員エンジニアになるわけやけど
ここも1、2年実務経験積んだら
独立するために退職する


26ぐらいにフリーランスになって
そこから1年に一回くらいペースで
案件変えていく。


大体こんな感じやねんけど
つまりずっと1、2年のペースで環境変えてるから
いつまでも新人ポジションで
それが当たり前になっちゃってるんよね。



この状況が結構危険で
普通やったら20代後半以降は
リーダーになったり後輩を持ったりと
責任がある仕事が求められるし
30代以降とかもはやそれが当たり前になります。


要は責任あるポジションができるかどうかやから
これから追いつきたい人は

今の現場で積極的にリーダーポジション狙いに行くか

それがハードル高いなら
1件5万円でいいから個人で案件とって
やり切る経験をすると

責任者としての自覚が出てくるからおすすめです"
なぜ仕事が遅いエンジニア,"仕事遅いエンジニアってタスク説明された後に
ちょっと休憩って30分ぐらいダラダラしてる
時間があると思うけど

その30分が8時間のロスにつながってるからね。


これ聞いたことある人多いと思うけど
エビングハウスの忘却曲線ってのがあって
今聞いた話も20分後には42%忘れます。


この前提で考えるとわかりやすいんやけど
休憩した後にいざ作業しようってなった時に

ちょっとあれ何からやればよかったっけ？
みたいな感じで忘れて
議事録やMTGの録画見返したりとかの

思い出す時間がありませんか？
仕事遅い人って手を動かすのが遅いってより
意外とそう言うロスタイムが積み重なって

気づかないうちにどんどん差を
付けられてるんですよね。


じゃあこれを無くすために
僕がやってるテクニックを紹介すると

MTGとかでやる事について話をしたら
まず終わってすぐ、

記憶が新鮮なうちに
この後やるべき事を箇条書きでメモしてから
休憩に行きます。

特に僕は結構ADHD気質があって
結構物忘れしやすいから

もうタイムアタックばりに
忘れる前に必死にやる事を書き出します。


そうするとその後休憩したり時間が空いても
そのメモさえ見れば一瞬で思い出せるから

すぐに作業に取り掛かれます。


こうすると思い出す時間っていう
ロスタイムが無くなるから

今より2倍、3倍仕事が早くなるから
ぜひためしてみて
"
先輩エンジニアの技術力高すぎて,"MTG全く話ついていけない時の対処法


インスタ台本テンプレ

ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

先輩エンジニアたちMTGで大事そうな話してるけど
技術レベル高すぎて全く話ついていけないって
ときの対処法を教えます。

めっちゃ必死に話についていこうとするけど
会話聞いてたら分からん単語ばっか出てきて
頭パンク、思考停止、
なんも分からんってなってませんか？

まず話ついていこうとするのを
諦めてください、諦めたら解決します。


これ脳の使い方がめっちゃ大事なんやけど

一番良くないのって
話ついて行くことに無理やり
脳のリソースを使った結果
逆に思考停止状態になっちゃう事なんですよね。

思考停止になると後半とか何話してたのか
何も覚えてなくてこれが最悪ですよね。


逆にやばい時は話着いていくのを諦めると
俯瞰的に見れるから脳に余力ができます。


で、やって欲しいのは
できた余力を先輩たちが話してる中で
出てきた分からない言葉を
メモする事に全振りしてください。

その時オンラインなら画面録画とか
リアルMTGならiPhoneで録音しておくと良いです。


MTGが終わった後すぐに
メモした分からない単語について調べてざっくり理解した上でMTGの録画を聴いてください。

そうするとさっきわからなかった事も
分かるようになってます。

もしそれでも分からないことがあれば
この部分がわからなかったんですけどって
先輩に聞きに行きましょう。


これをやってるとだんだん
先輩たちの話が分かるようになってくるから
ぜひ試してみて







# 問題提起

# 問題拡張

# 解決策

# CTA"
フリーランスエンジニアとして稼ぎ続けるためにはどれくらいののスキル感が必要なのか？,"インスタ台本テンプレ

ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

フリーランスエンジニアとして稼ぎ続けるために
必要なスキルレベルを解説します。

# 問題提起

先に結論言っておくと
・今稼ぐためのスキルと
・稼ぎ続けるためのスキルは全く違います。

今、会社員エンジニアで
実務経験2,3年ぐらいある人やったら

フリーランスになることも視野にあるけど
自分のスキルで通用するんかな？って思うよね。

僕も今でこそ月単価130万円もらってますけど
フリーランスなる時は50万の案件で
めっちゃビビってた。

でも安心して、普通に行けるから。

最低限の必要なスキル感で言うと
会社員として先輩にレビューして
もらいながらやったら
フロントかバックどちらか
1機能自走して開発できるスキルがあれば

余裕でフリーランスになれるし
月60万円〜80万円は稼げます。

今すぐフリーランスなって
稼げるようになるだけやったら

エージェント5個ぐらい登録して
その中で単価70万円以下の
案件は行きませんってお伝えしたら

勝手に面談組んでくれるから
必ず案件は決まります。

あとは今まで通り
ちゃんと仕事してれば普通に継続も貰えます。

で、冒頭でもお伝えしましたが
これは今稼げるようななるためのスキル感であって

今後稼ぎ続けるために求められるスキル感は
全然違います。

今はフリーランスエンジニアは
ボーナスタイムやから
まずは今のうちに月収を上げておくのは
絶対やった方がいいんやけど

稼ぎ続けるためには
ビジネス視点を持って開発できるスキルが大事

いくつか例をお伝えしておくと
・マーケティングスキル
・営業スキル
・データ分析スキル

今はまだ大丈夫やけど
AIによって開発スキルがあるだけでは
価値がなくなってくから

そのスキルをどう使って
売り上げアップやコストカットに繋げるか？って
視点で仕事ができる
エンジニアが稼ぎ続けます。



# 問題拡張

# 解決策

# CTA"
いつまでエンジニアできると思ってる,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

いつまでエンジニアできると思ってる？

いつまでこの単価続くと思ってる？

# 問題提起

# 問題拡張

# 解決策

# CTA
"
スキルが足りないならせめてコミュニケーション早くしようぜ,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

# 問題提起

# 問題拡張

# 解決策

# CTA"
タスク進めてみてわからないことがあれば聞きます,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

「今は質問ないのでタスクを進めてみてわからないことがあればまた質問します」
っていうやつは大体事故ります

# 問題提起

認識合わせでこれいうやつ

# 問題拡張

# 解決策

マインドマップが便利です


認識合わせとは
どれだけ曖昧な部分をなくして
解像度をあげれるか


こういうぼやけた状態から
高画質にしていくようなイメージ


解像度をあげるには
マインドマップを使が便利

タスク説明ってまずはざっくり説明してくれました
じゃあより具体的に、具体的にって

枝をどんどんふかぼる様に進めていけば
自然と解像度が上がって認識違いも減ります



# CTA"
エンジニアがAI活用して個人で案件を取る方法,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

# 問題提起


boltでUI作る

あとは裏側って話

# 問題拡張

# 解決策

# CTA"
"この子認識違い起こすやろなー
","ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識

# タイトルコール

月単価130万円のPMが
あー絶対この子認識違い起こすやろなーって思う瞬間を解説します

# 問題提起

エンジニアなら一度は認識違いで怒られたことありますよね？

タスクの説明をしてもらった時は
なんとなく大丈夫かなって思ってたけど


いざ手を動かしてみたら
考慮漏れがあったり

簡単に実装できると思ってた部分が
意外と複雑だったり


結果、タスク期限に遅れて怒られる羽目になる。

# 問題拡張

僕も若手の頃はよく認識違い起こして怒られてたし
今では自分がマネジメントする側やから
認識違いがあったら指導する立場にあります。

# 解決策

で、もうマネジメントする側からしたら
大体あ、この子多分認識違い起こすやろなーってのは
もうタスク依頼する段階からわかるので
特徴を解説します。

自分に当てはまってないか確認しながら
聞いてみてください。

1つ目
「タスク説明した後に、作業してみてわからないことがあれば質問します」

これいう人はほぼ認識違い起こしま
確かに作業する時って



# CTA"
老害系の先輩エンジニアの対処法,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

『お前がなんで分からんのか、分からん！』

こう言うめんどくさい先輩エンジニアと
同じ現場になった時の対処法を教えます

# 問題提起

実際これ僕も初めてフリーランスになった時の
案件で言われた事なんですけど

エンジニアって結構こう言う
技術つよつよだけど
コミュニケーションに難がある先輩って多いですよね。

圧倒的に技術力の差があるから
まったく言い返せないし

ずっと否定されるから自己肯定感も下がってくる。

とはいえ、せっかく入った現場やから
学ぶべきことは学べるように
どう立ち回ったらいいか解説します

# 問題拡張

# 解決策

①つめ
何か強く言われてもまに受けない。
これが一番大事です。

こいつ普段モテへんのやろな
ぐらいに思ってると
なんか可愛く見えてきます。


②つめ
技術の勉強ちゃんとやってるアピールをする。

特に今現場で使ってる技術や
先輩エンジニアにどんな技術勉強したらいいか
聞いてみて

ちゃんと勉強した上で
やってるアピールをしましょう。

つよつよのエンジニアは
人生プログラミングみたいな
オタク属性の人が多いです。

意外と技術に寄り添おうとすると
嬉しくなって色々教えてくれるようになるので
上手くつよつよの技術を吸収しましょう。


②つ目
仕事終わり飯とか誘って
仕事モードじゃない時に話してみる

つよつよ系エンジニアの人も
言うて人なので
仕事終わりにご飯とか誘ったら普通にいけます。

いきなり飲みとかだと
ハードル高いって時は

ラーメンとかだと仕事サクッといけて
ハードル低いのでおすすめです。


言うてもつよつよエンジニアの人も
普段仕事中だとストレスも溜まるし
発言もきつくなってしまいます。


でも仕事モードじゃない時なら
意外とフラットに話ができたり
仕事中に聞いてたら怒られるような質問も
普通に話してくれます


実際この人たちの
技術力が高いのは事実なので
上手く吸収できるように立ち回って行きましょう、






# CTA"
なぜ先輩エンジニアがプルリクもっとこまめに出せっていうのか解説します,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

プルリクはもっとこまめに出せ！
って先輩エンジニアに言われたことありませんか？

実はあれ内心ブチギレてます。

# 問題提起

僕も今PMやってて
レビューする立場にあるんやけど
あれ結構大変なんよね。

確かにみんなからしたら
アサインされたタスクを必死な思いで
完了させて

やっとプルリク出した
一旦解放されたーって時に

もっとこまめに出せよって言われたら
嫌な気持ちになるかもしれんけど


レビューする側は
自分のタスクもある状態で
さらに大量のプルリクを消化しないといけない

しかも人が書いたコードを理解するって
自分で実装するより疲れる。


ただでさえ忙しいのに
その中で、ファイル変更100個とか
一気にレビュー出されると
変更点多すぎてどこからみたらいいのかわからんし
バグがあっても発見しづらくなるから
もう絶望します。


# 問題拡張

# 解決策

だからレビュー依頼する時は
負担にならんように
みんなもっと細かく機能単位ぐらいで
中間レビューを投げる様にしてあげて。


そうしたら後でどかっと指摘入ることも少なくなるし
手戻りも減るからお互い楽できる


# CTA"
タスク進めてみてわからないことがあれば聞きます,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

「今は質問ないのでタスクを進めてみてわからないことがあればまた質問します」
っていうやつは大体事故ります

# 問題提起

エンジニアがタスクアサインされた時に
最初タスク説明されて
認識合わせすると思うんやけど


なんか説明されたけどよく分からんかったな
とりあえずやってたら分からんとこ出てくるやろ

って感じで進めたけど
後でめちゃめちゃ考慮漏れや、認識ズレあって
期限まに合わんかったて経験ないですか？

# 問題拡張

それは会話できるときに
うやむやにしたのが原因です。

認識合わせは
どれだけ曖昧な部分をなくして
解像度をあげれるかが大事。

とはいえ会話で全部整理し切るのは大変やから
そんな時に使えるのがマインド

# 解決策


タスク説明してもらった事を
こんな感じでざっくりリストアップして
じゃあここって具体的に言うとどうか？と

枝をどんどんふかぼる様に進めていけば
自然と解像度が上がって認識違いも減ります


認識違いが減って
ちゃんと期日通りにタスクこなしてたら
自然と単価は上がるからぜひ試してみて

# CTA"
単価200万円が5万円になった話,"単価200万円が5万円に下がった話
—---------------------------

3年前Lステップ構築代行という仕事が
かなり稼げる時期がありました。

当時１案件だけでも
200万円ぐらい稼げるような状態でしたが

今ではLステップ構築者が増えすぎたせいで
ただ構築ができるレベルでは
１案件5万円ぐらいと

めちゃめちゃ相場は落ちています。


じゃあ逆に今でも
Lステップ構築で稼げている人はどんな人なのかと言うと


ーーー
マーケティングを学び
Lステップというツールを使って
売り上げアップ、業務効率化とかの

お客様の課題を解決する思考で
仕事ができる人っていう感じです。
ーーー


今回いきなりLステップ構築の話をし出したのには理由があって
これって今後エンジニア業界でも
同じことが起こると思っています。


エンジニアって
正直今はめっちゃ稼げる仕事じゃないですか。


特にフリーランスエンジニアになれば
会社員と同じ働き方でも

月60万〜80万円を稼げるし
長期で参画する前提の案件が多いので
安定的に稼げるめっちゃいい働き方です。


でも僕はこの状況ずっと続くとは思いません。


正直あと5年以内には
このバブル状態は崩壊すると思っています。


今単価が60万円の人だったら
30〜40万ぐらいには落ちるかなーって感じ。


理由を説明すると


Lステップが流行り始めた時と同じで

今はただコードをかける人が
少ないから評価されてますが

本質的にはコーティングの作業ができる人ってだけなんで
一番量産型になりやすいポジションにいます。



で、今までってエンジニアの場合は
シンプルに勉強するのが難しいから


一気にエンジニアが増えて
需要と供給のバランスが崩れるってことはなかったけど

AIの登場で一気に状況が変わりました。


最近devinやcursorエージェントなど
もう経験2,3年ぐらいのエンジニアと
同じレベルのパフォーマンスを
圧倒的に人間にお願いするより
安く出してくれます。



僕も結構人に案件をお願いすることが多いんですけど
簡単な案件やったら

AIに作らせたほうが
お金も安いし、早いから

正直中途半端なエンジニアに数十万払うより
devinに月額7万円払う方が
めっちゃコスパいいなって思います。



ただコード書く作業だけできるひとの価値が
必然的に需要がなくなるので
単価も下がって結構キツくなると思います。


じゃあ今後生き残るエンジニアは
どんな人かって言うと


結論Lステップ業界と同じ

ーーー
マーケティングを学び
プログラミングという手段を使って
売り上げアップ、業務効率化とかの

お客様の課題を解決する思考で
仕事ができる人が生き残ります。
ーーー



今後はエンジニアは

・言われた作業だけできる低単価エンジニア
・課題を解決するために考えて仕事ができる高単価エンジニア

２極化します。


実際僕自身も
マーケティングを学んでお客さんの
課題を解決する思考で仕事をして
今では月単価130万円のエンジニアになっています。


しかも個人で案件を取れるようになったので
平日、土日関係なくいつ仕事してもいいっていう
すごく自由な働き方ができてます。


皆さんはフリーランスエンジニアなんで
めっちゃスペック高いです。


ちょっと考え方を変えれば
今後収入も上がるし、自分の時間ももっと増えるので
頑張っていきましょう!"
レガシー側になりますよ,"エンジニアって
あれほど未経験の時は
レガシー環境は嫌って

言ってたのに
世間では〇〇ってAIツールが
流行ってるみたいだけど
今使ってるエディタやツールが
使い慣れてるから

『学習コストかけて
スイッチするのは面倒。』
って現状維持バイアスが
働き始めたら
あなたもレガシー側に傾き始めてます。
その成れの果てが老害や
いにしえの技術を使い続ける現場です
『新しいものはすぐ試す』
このスピード感を当たり前にしていきましょう


確かに今あるものを変えて
新しい事を試すのって
エネルギーがいる

けど
まずは1歩重い腰を上げて
今日寝る前の1時間、時間作って

『すぐ試す』

これをやってれば
新しい事を試してるのが
当たり前になっていきます。
"
フリーランスエンジニアはマイペース,"フリーランスエンジニアは
マイペースな人が多い印象で

自分が理解できる範囲で成長出来るように
自分が仕事がしやすいように
自分のペースで進めれるように

気を遣って貰う事が当たり前になってて

ある意味、多少可愛いだけで
金が貰えるパパ活女子みたいな
ムーブをかましている。

しかし優秀な人、時代は
本人たちが気づいてないぐらい
素早く成長しているので

いつまでも自分のペースでやってると
相対的に価値が下がってる事に気づくべき。

今20代の人が恐るべき事は

30代、40代になった時に
本気を出し事ある人、ない人で
埋められない差ができる事です。

20代なら今からでも遅くないから
上のレベルの人たちの基準値に食らいついて
自分を一気に成長させる経験も必要。

やる気がある人は僕が愛を持って鍛えます。"
エンジニアに一番求められるスキルは分からない事を分からないって言う事です,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# 問題提起

うわ、先輩にタスク説明してもらったけど
分からん単語多くて全然意味が分からんかった

質問したら出来ないやつって思われるし
とはいえ今聞いとかないと後で
タスク遅れて怒られるし

どうしたらいいんやー！


いやもう素直に聞こ。
たったそれだけでめちゃめちゃ楽になれる

誤魔化しながら仕事してるから
ずっと自分の首を絞め続ける事になるし
怯えながら仕事する事になるねんで。


確かにチームMTGとか
シチュエーションによっては
周りに人がいすぎて

今俺が『これってなんですか？』って言うと
流れをぶった斬るから
聞けないって時もある。


そう言う時は分からない言葉だけメモしといて

後で優しい先輩に
『すいません15分だけ認識合わせの時間もらっていいですか？』

ってMTGの時間を取って
素直に分からなかった事を相談しましょう。

その先輩に対しては今教えてもらった分
できるようになったらこの人のタスクを
ちゃんと巻き取ろうって気持ちでいれば

相手も嫌な気しないし
自分も居心地良く仕事ができる

誤魔化すのが一番あかん。


# 問題拡張

# 解決策
"
"エンジニアなら自分でググって解決しろ！分からんなら早く聞け！いやどっちやねん
","ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール、問題提起

エンジニアなら自分でググって解決しろ！
分からんなら早く聞け！

って言われて
いやどうしたらいいねんって思った事一度はあるはず

僕も今PMやってエンジニア指導する立場やけど
全く同じ事言った事あるけど

実はこれ矛盾してるようで
上司の心境からしたら
全然矛盾してないってわかるから解説します。

# 問題拡張

結論お伝えすると
上司が部下のエンジニアに対しての心境は

『分からない事をまず自分で調べて考えて欲しいし、それでも分からないなら時間の無駄だからさっさと聞きに来て欲しいです。』


上司側からすると
部下の仕事が遅れた時は
自分がけつを拭かないといけないから
直前で焦らないように分からない事は
さっさと教えるから聞きに来て欲しい。


とはいえ、ただ無思考に聞きにこられても
本人の自走力上がらないし
自分の負担が増えるから良くない。


常にこの板挟みになってます。

皆さんからしたら自分の上司や先輩って
なんでも出来るスーパーマンみたいに
思うかもしれないけど

言うても同じ人間なんです
結構辛いんですよね。


もし現場の上司に
少し強く言われたとしても
間に受けて傷つくんじゃなくて

この人はどう言う心境で
そう言ったのかな？と
考えるようにしてあげてください。


そうすれば自分も上司も気持ちよく仕事ができます。



# 解決策

# CTA"
エンジニアが収入を上げながら時間の自由を手に入れるまでのロードマップ,"# タイトル&問題提起

エンジニアが収入を上げながら
時間の自由を手に入れるまでの5つのステップを解説します。


# 問題の深掘りと煽り

今フリーランスエンジニアの人って
会社員と同じ働き方で
言うて時間の自由がないそこまでないですよね？


# インサイト深堀り

正直、収入が上がったとしても
今の働き方をずっと続けるのはしんどいですし

病気とかで働けなくなったら
一気に収入がなくなるので
めちゃくちゃ不安定なので


収入を上げながら
時間の自由を手に入れる方法を解説します。

# 本編

①エージェントから行ける案件の単価を80万円までアップさせる

②メイン案件をやりながら個人で案件を取って副業を始める

③マーケティングを学んで課題解決型の働き方に切り替える

④チームを作って自分じゃなくてもできる仕事を外注していく

⑤個人で取った案件をメインにしてチームで回るように運用していく


この5つのステップに沿って自分のレイヤーを上げていってください。


今までは自分が働いたら利益率100％の状態でしたが
その考え方は捨てて
自分が手を動かさなくても
仕事が回る状態を作っていきましょう。


実際僕も自分が手を動かすことを減らして
品質担保に集中することで
月130万の単価をもらいながら

いつ働いてもいい生活ができています。


今回紹介したロードマップの完全版はプロフから受け取れます"
エンジニアの単価が下がらない前提で生活してませんか？,"ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

エンジニアって自分の単価が下がらない前提で
生活してませんか？

# 問題提起

努力を止めると平気で単価下がりますよ。

特にフリーランスエンジニアなった人は
今まで月2,30万やった月収が
いきなり月60万円以上とかになるから

金銭感覚も狂うし生活水準も上がります。

最初家賃5万とかの家に住んでたのに
今は家賃10万円越えのとこに住んでますよね。

# 問題拡張

僕も当時、家賃3万円の家から
12万円の渋谷の家に引っ越しました。


収入が上がるごとに生活を豊かにしていくのは
人生の幸福度が上がるから確かにいい事です。


けど絶対に忘れてほしく無いのは
今の生活水準を維持するには
常に努力し続けないと行けないって事で

確かに2,3年前なら
フリーランスエンジニアになって
あとはゆるっと暮らそうって風潮がありましたが
いまはもう厳しいです。


AIの進化もあって技術だけには価値がなくなるし
今は若くても今後年取ると、
新しい技術を身につけた若手が
どんどん追い上げてくるのでサボってると
単価下がります。


慢心せずに
技術力上げたり、新しい事に挑戦したりと
今の単価を維持するために
努力を続けてください。

努力したやつが最後は勝ちます。


# 解決策

# CTA"
フリーランスエンジニアとパパ活女子の本質は同じです,"インスタ台本テンプレ

ターゲット

健在
①これから独立したい会社員エンジニア
②フリーランスエンジニア1年目でこれから単価を上げてきたい人
③フリーランスエンジニアの働き方に飽きてきてる層
④フリーランスエンジニアの働き方に不安を感じてきている層
⑤新しいことを始めようと思ってきてるフリーランスエンジニア
⑥上流工程の重要性がわかってきてるフリーランスエンジニア
潜在
×
短期的な話、長期的な話

常識


非常識


# タイトルコール

パパ活女子みたいなフリーランスになってませんか？

# 問題提起

僕の周りのエンジニアの単価は
インフレしてて

エンジニア2,3年目で70万円、80万円って人が
たくさんいます。

もちろん単価に見合う努力をする人もいるけど

タスクは最低限稼働時間分こなすだけ
MTGでは積極的に発言しない
責任あるポジションは嫌
技術の勉強もしない

でも、高単価は欲しい。
そんなエンジニアになってませんか？

これやってる事
ただご飯食べにいくだけで
お手当3万円くださいって言ってる
パパ活女子と同じです。

# 問題拡張

エンジニアとパパ活女子に共通するのは

・パパ活女子は顔面が可愛いってところに需要がある
けど年を取っていくと老けて需要が下がっていき

・エンジニアならプログラミングスキルに需要がある
でも時代が進むと今持ってるスキルに需要がなくなっていきます。

# 解決策

どの世界でもその中で長期的に生き残っていく人は
今貰ってる報酬に釣り合うように努力できる人です。

でもエンジニアもパパ活女子も
結構簡単に稼げちゃうからこれがずっと続くと
勘違いして努力しなくなります。

努力の仕方を忘れると
いざ本当にやばい時に立ち向かえなくなるので
今からでも現場でちょっと
レベルの高いタスクに挑戦してみたり、

個人で案件取ったり、個人開発したりと
技術を上げる努力をしてください。

頑張らなくなるエンジニアが多いからこそ
コツコツ頑張る人が生き残ります。

# CTA"
"プログラミングを勉強しても月収80万円が天井な理由
","タイトル&問題提起
プログラミングだけやと月80万円が天井です


結論
まずそもそもなんでプログラミングだけだと
月80万円が天井になる理由を解説すると

皆さんは実装要因で働いてるので
決められた作業を消化する以上の
付加価値がないからです。


理由
そもそも企業がエンジニアに
お金を払って仕事をしてもらうのって

払った分以上のリターンを得るためですよね？

しかしビジネス構造的にただの作業要因だと
成果にほぼ差がないから
お金を多く払う理由がありません。

だから天井がくるんです。



具体例
これ営業で例えると分かりやすいのですが

毎月20万円売る営業マンと、100万円売る営業マンなら
どっちの方がお金払いたくなりますか？

絶対後者ですよね？
なぜなら多く売り上げを上げてくれるという
付加価値があるからです。


結論
エンジニアの場合でもこれは同じで

ただの作業要因よりも
売り上げに関わる上位レイヤーの方が

付加価値があるので当然収入も高くなります。



今後の予告
では付加価値をつけるために必要なのは

１、クライアントの課題を解決するスキル
２、課題解決のための分析スキル
３、案件を取るための営業スキル

この３つのスキルが必要です。

今後この３つについて掘り下げていくので
僕をフォローして他の投稿もチェックしてください

"
フリーランスエンジニアは稼げません,"タイトル&問題提起
フリーランスエンジニアは稼げません！
正確には今のままでは稼げなくなります。


問題の深掘りと煽り
特に現役のフリーランス！
月60、70万ぐらいやからもうそのまま
一生ゆるっと生きていけると思ってるやついますよね？

そんな人達が一番消えます。


(共感)
せっかく頑張ってエンジニアなって
今いい生活できてるのに

今後収入下がるのって正直いやじゃないですか？



特にフリーランスエンジニアなら
スキルもあるから
ちょっと方向性変えるだけで


長く生き残っていけるのはもちろん
今よりも100万、200万と収入上げれるポテンシャルあるから
マジでもったいないです。



(CTA)


"
AIを使って学習効率をあげる方法,"新しい技術のキャッチアップの時
新しい概念が出てきてよく分からんって時は
下記のプロンプトをChatGPTに送れば
わかりやすく解説してくれます

例
----
あなたは教えるのがとても上手な先生です。

エンジニア初心者に
WEBサービスをデプロイするために
最低限知っておくべきインフラの基礎知識を
漫画のように生徒と先生が会話する形式で
解説してください。

一般的なこうだよねって話もそうですが
実践的な本質も解説してください。
----
"
"今より単価10万円あげる方法を月単価130万円のエンジニアが解説します
","# タイトルコール

今より単価10万円あげる方法を月単価130万円のエンジニアが解説します

# 問題提起

「単価上げるためにGo言語やReact勉強します！」

いや、単価あげたいだけなら
そんなことしなくても一瞬であがります。

# 問題拡張

# 解決策

# CTA
"
"AIで仕事が増えるエンジニアと減るエンジニアの違い
インスタ台本テンプレ
","# タイトルコール

AIで仕事が増えるエンジニアと減るエンジニアの違いを解説します

# 問題提起

よく
『AIのせいでエンジニアの仕事は減っていく』っていう人と
『Aのおかげでエンジニアの需要は増えていく』っていう人

どちらもいますが
これは前提条件が噛み合ってないから
意見が食い違って見えますが
企業側の目線になると本質が見えてきます。

# 問題拡張

結論
企業目線だと
元から技術力の高い優秀なエンジニアは
AIのおかげで作業効率が上がって
質の高い仕事を多くこなせるから
どんどんお願いしたいし

逆に経験2、3年目ぐらいで
技術力はそこそこだけど単価だけ高くなってた
ジュニアエンジニアのコスパが悪くなるから
そいつらの予算を削って
優秀なエンジニアの単価を上げようって流れになります。

つまり格差が広がります。


これは今に始まった話じゃなくて5年前から

『エンジニアが足りない！』
『でも未経験はいらん！』

みたいな矛盾があったけど本質を見たら
【お金が払う価値があるエンジニアが足りない】
って話なのと同じです。

格差が広がる前にスキルを上げましょう。

# 解決策

他の動画でベテランエンジニアに
負けない方法を解説してるから全部見てください。

# CTA"
AI時代にエンジニアが求められるスキル,"# 問題提起

AI時代にエンジニアが求められるスキルを解説します。

開発系AIの爆速的な進化によって
エンジニア業界は大きな時代の変化を迎えていて
この波についていけないと

スマホが当たり前の現代で
ガラケーを使ってる
みたいな感じで時代に取り残されてしまいます。

# 問題拡張

これを見てるエンジニアの人は
経験2、3年ぐらいの方がほとんどで
C言語やVBのような
レガシーな技術の案件に参画しないように
気をつけてる人がほとんどだと思います。

しかし、今変化についていけないと
あなたがレガシーな技術使ってますねと
言われる側になってしまうので

そうならないためにもこれからお伝えする2つのポイントを意識してください

# 解決策

①つ目
SNSなどでAI技術の情報を知ったらその日のうちに試す。

AI技術はとんでもないスピードで進化しています。

1ヶ月前の情報だともう古いし、もっといいのが出てたりするので
新しい技術がでたらすぐ試しましょう。

毎日仕事終わった後の1時間は
AI技術のキャッチアップに時間を使うとかの
ルーティングを決めるのがおすすめです。

②つ目
コミュニケーションのスピードを早めて
会話→実装→会話のサイクルを爆速で回す。

AI時代ではもはやAIを使って作業が効率化されまくってるのが当たり前になります。
AI使ってないやつまるで今でも洗濯機使わずに手洗いしてるやつみたいな目で見られます。


では作業が早くなると次に求められるのが
コミュニケーションのスピードです。


今までも大事だったけど
作業が早くなることでより重要になります。

なぜならAIによって作業スピードは速くなっても
それを扱う人間がコミュニケーション遅いから
やりたい事が中々進まないって評価になってくるからです。

タスク終わったらと言ってのんびりせずに
すぐ次何やったらいいですかと聞きにいってください。


今後はこれができるエンジニアが基準になるし
そっちに依頼したほうが多くのタスクをこなしてくれるから
単価も高くなります。
"
2025年AIによってはエンジニアの評価は変わります,"# 問題提起

「2025年からAIによってエンジニアの評価基準は変わります」

2024年の年末頃から開発系AIは爆発的に進化していて
ちゃんと活用してる人は作業効率が5倍ぐらいになってます。

レベチです。

# 問題拡張

（画像出したい）

そして今はエンジニアの評価基準が
AIが出る前が基準なので、ちょっとAI使えるだけで
作業効率上がったねっていうプラス評価でした。

でも今年から変わります。

2025年はAIを使いこなしまくるが当たり前になるので
作業効率が爆発的に高い人が評価基準になって

ちょっと使いこなしてるレベルでは
想定的にマイナス評価になります。


AIをキャッチアップできず時代の変化についていけなかった
エンジニアが2026年にバッタバッタ離脱していきます。
頑張るなら今年がマジでラストチャンス。

# 解決策

エンジニアがAI使って作業効率を上げる方法は
他の動画で解説してるので絶対にみて

# CTA"
AIでキャッチアップを効率化する方法,"# 問題提起

「AIでキャッチアップを効率化する方法」

新しい技術を勉強するにしても
まずこれがどんなものかわからない

いきなりDDDって言われても
これは何ができるものなのかよく分かんない。

# 解決策

そんな時は
ChatGPTにこのプロンプトを送ってください

```
あなたは教えるのがとても上手な先生です。
[キャッチアップしたい技術の名前]の
基礎知識を漫画のように生徒と先生が会話する形式で 解説してください。
一般的なこうだよねって話もそうですが 実践的な本質も解説してください
```

そうするとこんな感じの物語形式でわかりやすく解説してくれます。

（画像）

参考記事や、公式ドキュメントを読んでも
全然理解できない！って時はぜひこのプロンプトを使ってみてください

いいねで保存してね

# CTA
"
「公式ドキュメント何書いてるのか全然わからんくないですか？」,"# 問題提起

「公式ドキュメント何書いてるのか全然わからんくないですか？」

新しい技術勉強するために
参考記事や公式ドキュメント見るけど
あいつら教える気ないよね。

わからん言葉をわからん言葉で説明すんなよ。

「MVCはUIと内部データとを分けるデザインパターンの1つで、」

って概念的なことを説明されても
デザインパターンってなんやねん、要はどういうこと？ってなりません？

# 問題拡張

とはいえやっぱ新しい技術を勉強する時には
概念を理解する必要はあるから
効率よく学習する方法を教えます。

# 解決策

やり方
ChatGPTにこのプロンプトを送ってください

```
あなたは教えるのがとても上手な先生です。
[キャッチアップしたい技術の名前]の
基礎知識を漫画のように生徒と先生が会話する形式で 解説してください。
一般的なこうだよねって話もそうですが 実践的な本質も解説してください
```

そうするとこんな感じでわかりやすく解説してくれます。

（画像）

皆さんも難しい話をドキュメントみたいな文章で
ダラダラ説明されると
なんか理解する気なくなるけど

漫画だったらなんかすぐに理解できたって経験ありますよね。

まずこのプロンプトでざっくり概念を理解してから
ドキュメントや記事を見るようにしてください

理解度が格段に上がります。

# CTA"
"頑張れない理由を作るな
","めっちゃ悲しい事がありました。


今年の初めぐらい
中川さんに

彼女と同棲し始めてから
今の生活で十分幸せで
頑張る理由が無くなって来ましたって言われて、


俺も今彼女と同棲して
めっちゃ幸せって感じるけど
この生活が続くように
むしろ仕事はもっと頑張ろうって
モチベになってるから



結局どんな状況であれ
それを言い訳にせずに
今自分が頑張るかどうかでしか
無いんやなと思いました。



あいつ元から金持ちとか
元からスキルあったとか
前提条件を言い訳にし出したら
キリないからな。


てゆうかもうエンジニアなれてるんやから
君たち才能あるやろ"
"【1年に1回案件変えてるエンジニアは危険】

","フリーランスエンジニアによくありがちな

1年に1回ぐらいで案件変えて
新しい刺激を取り入れていくスタイルは

フリーランス3年目までは
まずは色んな環境を知りましょうで
むしろ良いんだけども

それ以降ずっとその働き方してると
浅くて痛い奴になります。

---
分かりやすく言うと
セフレはいっぱい出来るけど
本命彼女は出来ない奴になります。
---

3年目以降はどちらかと言うと
1つのプロジェクトの成功に向き合って
深く関わって行くような経験があると
フリーランスとしての深みが出るので

どこかで1つの案件で
少なくとも3年ぐらい
深い関わりを持った経験をするのが大事

人員の入れ替えが激しいIT業界だからこそ尚更
それが差別化になります。"
エンジニア2、3年目ぐらいの人がAIを一番使いこなせてない,"経験2,3年ぐらいの
中堅ぐらいのエンジニアが
一番AIを使いこなせないポジションにいます。

SNSで開発系のAI情報とかを見るけど大体が
・〇〇っていう新しいAIが出ました〜
・プロンプト一発でこんな
　オセロアプリが作れるんですよ〜！
・0からこんなサービスが作れました〜！

みたいなの言うけど
今案件に入ってるエンジニアからしたら

『オセロアプリなんか作る場面ある？』

『既存で動いてるものの機能追加がメインだから
そんな0からサービス作れる
AI知っても今ないんやけど？』

ってなりますよね。

エンジニアが実践の中で
どう使いこなすか？って話は全然話されない。

結果情報に踊らされるし
たまに新しいもの使ってみても

ん？なんか思ってたんと違うな？

ってなってAI活用を諦めてしまう。


だからぼくがエンジニアがAIを活用して
作業効率化する実践テクニックを解説しているので
ぜひ他の動画も見てください"
PM目線で単価あげたくなるエンジニアと、あげにくいエンジニアの特徴,"現役PM目線で単価を上げづらい
エンジニアの特徴を解説します
------

✅作業進捗が悪い

当然、進捗が悪ければ
単価を上げてあげるのは難しい

✅認識違いが多い

エンジニアを採用する上で
重要なのは月単価が決まってるうえで
コストに対してリターンが合うか？が
単価アップの判断基準になります。

認識違い違い多い人は
無駄な手戻りなどのロスタイムが多いので
単価を上げ辛い。

✅MTGで発言しない

朝会、昼会とかの
絶対喋らないといけないMTGは別として

それ以外のチームやサービスを
良くしていくためのMTGで
参加してるだけになってる人も
実は単価上げづらい。

基本的にPMが
クライアントに対してこの子は
単価上げて上げましょうと
交渉してあげるのですが

その時に発言するエンジニアは
存在感があるからクライアントにも
説明しやすいけど

全く発言しないエンジニアは
クライアントからしたら
見栄えが悪いので
こっちも交渉しづらい。

ただ作業をするだけと言うより
チームの一員として
PJ成功に向かっていける
エンジニアに

今後は高単価な案件が集中していくでしょう
"
"イヤなことやりたくないエンジニアきけ
","# タイトルコール

イヤなことやりたくないエンジニアきけ

# 問題提起

AIによって実装作業の価値がなくなっていく中で
今まで通りのマインドのエンジニアはやばいよって話で

特にフリーランスエンジニアは
単価も60万とか80万とかそこそこ高いし

別に特に頑張らなくても稼げちゃうから結構わがままで
パパ活女子みたいになってる人が多いです。

# 問題拡張

今後生き残っていくエンジニアは
・やりたくないことと
・やらなくてもいいこと

この違いをはっきり分けて向き合える人だと思ってて


例えば
・プライベート犠牲にして技術を勉強するのがイヤ
・営業するのがイヤ
・責任のあるポジションになるのがイヤ

いろんな嫌なことをやらないようにしてきて

それでもエンジニアならたまたま稼げたから良かったけど
今後は厳しくなるから
やりたくないことも、やっていかないといけなくなるって話です。


# 解決策

エンジニアって今までめっちゃ
頑張ってきたはずなんですよ。

未経験からプログラミング学習で
意味わからん英語の画面に向き合って

やっと転職できても
ディレクトリの量が学習の頃と比べものにならんぐらい多くて
意味わからんなか頑張ってきたのに

だんだん頑張れなくなってきてませんか？

大変やと思うけどもう一度初心に帰って自分に向き合いましょう。

ここで向き合える人と、向き合えない人で
5年後追いつけないぐらい差ができるから。


# CTA
"
9割のエンジニアはAIに負けて仕事なくなります。,"# 問題提起

9割のエンジニアはAIに負けて仕事なくなります。
もうちょっと言うと経験年数が2、3年ぐらいで
先輩にレビューしてもらいながらだとギリ一人称で開発できるレベルの
エンジニアがやばいです。

# 問題拡張

AIって進化してるけど
エンジニアってまだまだ市場価値が高いし
案件もたくさんあるから仕事なんかなくならないでしょ。

って確かに僕も最近までは思ってました。

でもいよいよやばいです。


例えば最近一番やばいのがdevinという開発AIツールで

なんとSlackでこのタスクやってて伝えたら
勝手に開発進めてくれて、プルリク作ってくれるんですよ。

これほぼ人間の仕事ですよね。

しかも、エンジニア歴4年目ぐらいの人に
依頼してたんかなーってぐらい精度高いです。

普通にちゃんと機能開発してくれます。


これ月額7万円のサービスなんで
いっけん高いかなーって思うけど

月に60時間分のタスクをこなしてくれるので
時給1200円で働いてくれます。しかも24時間いつでも働いてくれる。

エンジニアの皆さんはそんな条件で働けますか？

僕自身個人で案件とったり、自社サービス開発をしてますが
エンジニアを新しく雇うよりAIに依頼した方が安く済みました。


# 解決策

では、そんなAIが進化していく中で
エンジニアが長期的に生き残っていくためには
今後どんなスキルを身につけていくべきかを
これから解説します。


1つ目　個人開発スキル

AIがほぼフルスタックに開発してくれる中
もうフロントの開発だけできますとか
バックエンドの開発だけできますとかは
通用しません。


簡単なものでいいから
フロントエンドを作って
バックエンドを作って

作ったものをAWSやGCPなどの
インフラにデプロイすると言う
この一通りの経験をして

エンジニアとしてのスキルを高めることが重要です。


2つ目　営業スキル

エンジニアは営業しなくても
エージェントが勝手に案件を紹介してくれるのが強みでしたが

AIによって求人数が減っていけば
必然と単価が下がるので

本来のフリーランスのように
自分の力で案件を取る力が必要になってきます。

とはいえ、いきなり月60万、80万の
案件を取るのは難しいので
まずは単発で5万円とかでいいので
簡単な案件から取りに行くって営業慣れしておくのがおすすめです。



3つ目　課題解決スキル

ただ決まった仕様通りに実装するだけでは
AIで出来るので価値がなくなります。

同じ開発をするにしても
ここの人件費をカットするために
業務効率化のシステムを作ります。
だったり

このPJはここが課題だからこう言う機能作って改善しましょう。

みたいに課題解決型で仕事が出来るようになれば
それをAIに作ってもらう


使いこなす側のエンジニアになれます。


AIに負けないず長く生き残れるエンジニアになるために
ぜひ頑張ってください。

# CTA

もし質問やご意見があればコメントください。

✅cursor agentを使って実装を効率化する方法
# 問題提起
cursor agentを使って
開発スピードを10倍にするテクニック。
エンジニアなら開発の速さは
評価や単価に直接影響します。
# 問題拡張
当たり前ですけど
エンジニアは良くも悪くも実力社会なので
開発遅くて進捗ない人が単価上がるって事は
ありません。
むしろ継続されるかすら怪しくなります。
これからお伝えするテクニックを使えば
明日から認識違いが減るし、
実装スピードも10倍早くなって
現場評価も上がるのでぜひ試してみてください。
# 解決策
①タスクがアサインされたら
機能を実装するまでの詳細設計とロードマップを
AIと一緒に作る
もしあなたの現場が
設計書をある程度作ってくれる現場なら
それを元にどのファイルに何を書くのか？ぐらいの粒度で詳細設計をcursorと作ってください。
その時のプロンプトはこちらです。
『〇〇が出来る機能を実装したいです。
まずはこのPJのコードベースを全体から詳細まで
キャッチアップしてください。

キャッチアップができたら
ドキュメント用のマークダウンファイルを新たに作成して
・型の追加、変更内容
・改善するファイルの整理
・実装までのロードマップを

作ってください。
』

ポイントはマークダウンファイルを
新しく作ってもらって
その中書かせる事です。
②出来た詳細設計を先輩や自分の上司に確認して
認識違いがないか確認してもらう。
もし認識違いがなければ
その詳細設計を元に
cursorに実装してもらえば完了！
本来これを自力でやると
1週間ぐらいかかるけど
AIを使えば早ければ1日で
開発が終わるようになるから
現場評価もめっちゃ上がります！"
キャッチアップが遅いと延長もらえません,"# 問題提起

キャッチアップが遅いエンジニアは延長がもらえません。

# 問題拡張

新しい案件に入った初期の頃に一番重要なのが
キャッチアップの早さ。

キャッチアップが遅いと第一印象悪いから
最初の継続されるかにめっちゃ響く。

とはいえキャッチアップって大変ですよね。


この案件はどんなサービスなんだろうか？
この案件はどんな技術構成なんだろうか？


中でも開発を進める上で
一番大事なんだけど、一番大変なのが
どこに何を書いてるんだ？っていう全体像の把握

これがわからずに
いざタスクを振られても
どこに何を書けばいいかわからないから

先輩に色々聞きたいけど
質問しすぎるとこんなこともわからないのかって
思われそうで不安。

とはいえ質問しなかったら
ずっと進捗が遅くなるから後から怒られるし。

って板挟みになるよね。


# 解決策

安心してください。
CursorのAI機能をうまく使えば先輩にストレスをかけずに
効率的にキャッチアップができるので
ぜひ真似してください。


それでは解説していきます。

結論CursorのComposer Agent機能を使うと一瞬でPJのキャッチアップができます。

使ったことないよって方は
Cursorを開いて⌘＋Iを押してください

Composerという機能が開くので
次にagentを選択してください、normalの方はアホなんで使わなくていいです。

もしagentって選択肢が出ない方は
Cursorのバージョンが
0.43.5以上になってないのでアップデートをしたら
表示されるようになります。


agentを選択できたら
今からお伝えする魔法のプロンプトを送ってください。

まず1つ目

「この案件に新規で参画しました。まずは全体像を把握したいのでドキュメントを新しくマークダウンファイルを作ってください。図解にした方がいいところはmermaid記法で書いてください。

時間をかけてもいいので正確に全体像から詳細までキャッチアップしてから書いてください』

これを送ると
プロジェクトがどんな構成でできてるかなど
このように図解を使ったりわかりやすくまとめてくれます。


これで全体像がわかったら
2つ目のプロンプト


『ありがとうございます。
それぞれのディレクトリやファイルの詳細な
内容までそれぞれ作ってください』

これを送ることで
どこのディレクトリに何が書いてるのかまで
詳細にまとめてくれます。


本来ならこれを自力で解読したり
現場でドキュメントがあるならそれをみたりするけど
実際のソースコードとズレてて混乱することがあるから

AIに今のコードがどうなってるのか
ドキュメントにまとめてもらってください。


ここでのポイントは
完全にAIが作ったドキュメントを鵜呑みにするのではなくて
参考にしながら自分でもざっくり確認する。

そしてその認識があってるかを
ドキュメントのファイルを見せながら先輩と確認してください。


ドキュメントがあると先輩も説明しやすいですし
こいつできるなって思われるので
ぜひこれから新規案件に参画する時にこのテクニックを活用してください。

言うても案件変えるのはしばらく先って方は
案件変える時に見返せるように保存しておきましょう。


# CTA

もし使ってみてわからないことがあれば
質問にお答えするのでコメントしてください。
"
"開発タスクが10倍早く終わるCursorの最強機能
","# タイトルコール
開発タスクが10倍早く終わるCursorの最強機能

# 問題提起
最近出たCursorの新しい機能
Composer Agentがやばいです。

今までの機能だと
Chatで指示をしたら一つのファイルに関数を作ってくれたり
Copilotがに次に書くコードを予測してくれたり

これぐらいのレベルでした。


# 問題拡張

確かにこれだけでも
AI使ってない時に比べたら2倍ぐらい
開発スピード早くなったけど

Composer Agentは10倍開発スピードが早く終わる破壊力を持っています。
実際僕はこれを使って2日でサービスを作ってリリースまでできました。

# 解決策

まだ使ってない方は
Macの方なら右側の⌘＋Iのショートカットーキーを押せば
Composerって画面が開けるのでここから使ってください。

注意点としては
normal,agentってあるので
絶対にagentの方を使ってください。

normalはアホなんで使わなくていいです。


もしagentって選択肢が出ない方は
Cursorのバージョンが
0.43.5以上になってないのでアップデートをしたら
表示されるようになります。

# CTA

具体的な活用テクニックは
他の動画で解説してるので
ぜひそちらをご覧ください。

もし使い方がわからない方は
コメントで質問してくれたら回答します。
"
AIを使いこなさないエンジニアは性格が悪くなります,"# 問題提起
AIを使いこなさないエンジニアは性格が悪くなります


# 問題拡張
最近AIのニュース色々あって何が使えるかよくわからんわ
いまいち普段の開発で活用できてる自信ないなー
CursorやCopilot使ってるから一旦大丈夫かー

って思ってる人、正直危険です。

今めっちゃ開発のAI進化してて
使ってるか、使ってないかで
開発効率5倍以上変わるし


あなたは頑張って
1時間かけて手洗いでゴシゴシ洗濯頑張ってるのに

AI使ってるやつは
ドラム式洗濯機にぱぱって洗濯物入れてボタン押してぴ
はい、洗濯終わり。

これぐらいの差が出ます。


自分はこんなに頑張ってるのに開発遅いけど
あの人はめっちゃのんびりしてるけど開発めっちゃ早いってなると
だんだんムカついてきて、性格悪くなります。

# 解決策

最新の開発AIやエンジニアが普段の仕事で
AIを使うためのテクニックを発信してるので
他の動画もみてください。

# CTA

コメントにあなたが現場で使ってる
エディターやAIツールを教えてくれたら
それの使い方テクニックを返信します
"
案件取れるエンジニアと、取れないエンジニアの根本的な違い,"起

うちの講座では
まず案件を取りにきましょうと
お伝えしてますが

・すぐに案件取れる人もいれば
・苦戦する人もいる

のが事実で
これって何が違うかっていうと
相手目線になれるかどうか、

結局これに集約されるんよねー

助

もちろん今ってAIが流行ってるから
「僕AI使えます！」って言っておけば
興味持たせることはできるから
一旦商談には
いけるかもしれないけど

相手目線で考えれないと
実際に商談して提案する時に
このお客さんは何を課題に思ってるのか？
が全く理解できんから
あんま仕事できんやつってのがバレるよな。


しかもエンジニアにありがちなパターンとして
相手が何で困ってるか分からんから
とりあえず技術に逃げることが多い。

僕に対して
「オフ会行ってきました！」
「商談組んで喋ってみました！」

「Difyとか、こう言う技術使えそうなんで
とりあえずまずは作ってみようと思うんですけど
はるやさん的にどう思いますか？」

って相談されても

そのお客さんって
結局何が課題で困ってんの？が
全然ヒヤリングされてないから
正直なんとも言えないし
いや絶対まだ作ったあかんやろってなる。


まずちゃんと相手のことを理解しようとしないさい。
技術の話はそっからです。


最

で、大体エンジニアにこれを
お伝えしたらなんかすごい悩みだすんですよ。

相手目線ってそもそも何なんだろう？とか
考え初めて、結局会話終わったりするんやけど

いや違うやん

まずその『自分の頭の中だけの世界』で
相手のことも分からんのに勝手に考えて
しかも最後は自分が都合いいように勝手に決めつけて。。。

もうそれが相手を理解しようとしてないって
ことやねんで。


そこから全部間違ってるよ。


『相手の目線が分からないんです。』
じゃあちゃんと会話しろよ。

『次商談組むんでその時会話してみます』
それだけじゃ遅いし、弱いって
なんでオンラインで完結させようと思ってるん。


相手目線が分からないんやったら直接話しにいけって。
飯とかいって2時間、3時時間飲みながら会話したらいいやん。


そんなただでさえ相手目線わからんやつが
ズームのたった1時間で相手のことが
わかるわけないやろ？


結

案件獲得に限らずビジネスって
どれだけ相手の理解度を上げれるかって戦いやから

そこを理解度を上げるためにはどうしたらいいか？を
中心に考えてください。


それが一番早いのが飯いくことなんで
今案件探し中の人は
絶対お客さんをご飯に誘ってください。


それ1回いくだけで
お客さんの理解度も上がるし
仲良くなったら発注してくれる可能性も
ぐっと上がるからまずは行ってみよう。"